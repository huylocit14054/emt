  [1m[35m (36.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (8.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180605065536)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (9.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "password_digest" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605065536"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjects (20180605070310)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (8.7ms)[0m  [1m[35mCREATE TABLE "projects" ("id" bigserial primary key, "name" character varying, "description" character varying, "member_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070310"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjectMembers (20180605070349)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "project_members" ("id" bigserial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint, "project_id" bigint, CONSTRAINT "fk_rails_49ebe01c9d"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
, CONSTRAINT "fk_rails_f3b43b5269"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_user_id" ON "project_members"  ("user_id")[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_project_id" ON "project_members"  ("project_id")[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE UNIQUE INDEX  "project member index" ON "project_members"  ("user_id", "project_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070349"]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.0ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-06-05 07:11:10.253069"], ["updated_at", "2018-06-05 07:11:10.253069"]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Loc"], ["password_digest", "$2a$10$0.yvUT82Lkwnv/.tjyI4ZuKLcNgnKh6W1yp8J7NGrsBEYpnmrIukW"], ["role", "admin"], ["created_at", "2018-06-05 07:30:41.084111"], ["updated_at", "2018-06-05 07:30:41.084111"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Loc"], ["password_digest", "$2a$10$U1aqsLSLYF8qMibN0h3/tOoo5qvcOhJoddOm/SkUbjwwT7dsT22Ye"], ["role", "admin"], ["created_at", "2018-06-05 07:31:06.896898"], ["updated_at", "2018-06-05 07:31:06.896898"]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.8ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 2]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_project_on_name" ON "project"  ("name")[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_projects_on_name" ON "projects"  ("name")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605073304"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Loc"], ["password_digest", "$2a$10$lblCQP.8ij.33WQ2JaVhXOhETfJVapx.ImU7sI7RC1qGLrUKg3Jz6"], ["role", "admin"], ["created_at", "2018-06-05 07:34:24.665448"], ["updated_at", "2018-06-05 07:34:24.665448"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Nhat"], ["password_digest", "$2a$10$paeQ5hzwB03g2Fp4Oa9v/On6OmvNpjH30WymElxtZf3OuQiSxlSEO"], ["role", "admin"], ["created_at", "2018-06-05 07:34:30.671163"], ["updated_at", "2018-06-05 07:34:30.671163"]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "projects" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "project 1"], ["created_at", "2018-06-05 07:38:48.148140"], ["updated_at", "2018-06-05 07:38:48.148140"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (0.7ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-05 07:39:52.598297"], ["updated_at", "2018-06-05 07:39:52.598297"], ["user_id", 1], ["project_id", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.5ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-05 07:40:04.434121"], ["updated_at", "2018-06-05 07:40:04.434121"], ["user_id", 1], ["project_id", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-05 07:40:21.623980"], ["updated_at", "2018-06-05 07:40:21.623980"], ["user_id", 4], ["project_id", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 1]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mProject Load (1.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateDimensions (20180605074548)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.4ms)[0m  [1m[35mCREATE TABLE "dimensions" ("id" bigserial primary key, "name" character varying, "type" character varying, "project_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_6837067d06"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX  "index_dimensions_on_project_id" ON "dimensions"  ("project_id")[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "dimention_name" ON "dimensions"  ("name", "project_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074548"]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateMultipleChoiceValues (20180605074719)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.9ms)[0m  [1m[35mCREATE TABLE "multiple_choice_values" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_050871e438"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE  INDEX  "index_multiple_choice_values_on_dimension_id" ON "multiple_choice_values"  ("dimension_id")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_value_name" ON "multiple_choice_values"  ("name", "dimension")[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateMultipleChoiceValues (20180605074719)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.2ms)[0m  [1m[35mCREATE TABLE "multiple_choice_values" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_050871e438"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE  INDEX  "index_multiple_choice_values_on_dimension_id" ON "multiple_choice_values"  ("dimension_id")[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_value_name" ON "multiple_choice_values"  ("name", "dimension_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074719"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.0ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateAuthorizations (20180606014101)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (15.2ms)[0m  [1m[35mCREATE TABLE "authorizations" ("id" bigserial primary key, "project_member_id" bigint, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_4e2e5e0fb5"
FOREIGN KEY ("project_member_id")
  REFERENCES "project_members" ("id")
, CONSTRAINT "fk_rails_9e168b6a2c"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_project_member_id" ON "authorizations"  ("project_member_id")[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_dimension_id" ON "authorizations"  ("dimension_id")[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE UNIQUE INDEX  "authorization_key" ON "authorizations"  ("project_member_id", "dimension_id")[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014101"]]
  [1m[35m (5.0ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateValueAuthorizations (20180606014154)
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (8.0ms)[0m  [1m[35mCREATE TABLE "value_authorizations" ("id" bigserial primary key, "authorization_id" bigint, "multiple_choice_value_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_7f9c89633c"
FOREIGN KEY ("authorization_id")
  REFERENCES "authorizations" ("id")
, CONSTRAINT "fk_rails_6d84d18fc0"
FOREIGN KEY ("multiple_choice_value_id")
  REFERENCES "multiple_choice_values" ("id")
)[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE  INDEX  "index_value_authorizations_on_authorization_id" ON "value_authorizations"  ("authorization_id")[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE  INDEX  "index_value_authorizations_on_multiple_choice_value_id" ON "value_authorizations"  ("multiple_choice_value_id")[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_authenticate_value" ON "value_authorizations"  ("authorization_id", "multiple_choice_value_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014154"]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" LIMIT $1[0m  [["LIMIT", 11]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (4.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (2.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (1.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to RenameColumnTypeInDimension (20180611045757)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "dimensions" RENAME COLUMN "type" TO "category"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180611045757"]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.5ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "asd"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:00:10.719967"], ["updated_at", "2018-06-11 05:00:10.719967"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDimension Load (1.1ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (120.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "enhance-url-tagging_development"[0m
  [1m[35m (112.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "enhance-url-tagging_test"[0m
  [1m[35m (9.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (6.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180605065536)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "password_digest" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605065536"]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjects (20180605070310)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.5ms)[0m  [1m[35mCREATE TABLE "projects" ("id" bigserial primary key, "name" character varying, "description" character varying, "member_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070310"]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjectMembers (20180605070349)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.6ms)[0m  [1m[35mCREATE TABLE "project_members" ("id" bigserial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint, "project_id" bigint, CONSTRAINT "fk_rails_49ebe01c9d"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
, CONSTRAINT "fk_rails_f3b43b5269"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_user_id" ON "project_members"  ("user_id")[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_project_id" ON "project_members"  ("project_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "project member index" ON "project_members"  ("user_id", "project_id")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070349"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_projects_on_name" ON "projects"  ("name")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605073304"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateDimensions (20180605074548)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.3ms)[0m  [1m[35mCREATE TABLE "dimensions" ("id" bigserial primary key, "name" character varying, "type" character varying, "project_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_6837067d06"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE  INDEX  "index_dimensions_on_project_id" ON "dimensions"  ("project_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "dimention_name" ON "dimensions"  ("name", "project_id")[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074548"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20180605074719)
  [1m[35m (1.0ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateOptions (20180605074719)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "options" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_7a39254793"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE  INDEX  "index_options_on_dimension_id" ON "options"  ("dimension_id")[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE UNIQUE INDEX  "option_name" ON "options"  ("name", "dimension_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074719"]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateAuthorizations (20180606014101)
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "authorizations" ("id" bigserial primary key, "project_member_id" bigint, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_4e2e5e0fb5"
FOREIGN KEY ("project_member_id")
  REFERENCES "project_members" ("id")
, CONSTRAINT "fk_rails_9e168b6a2c"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_project_member_id" ON "authorizations"  ("project_member_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_dimension_id" ON "authorizations"  ("dimension_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "authorization_key" ON "authorizations"  ("project_member_id", "dimension_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014101"]]
  [1m[35m (4.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (1.5ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "option_authorizations" ("id" bigserial primary key, "authorization_id" bigint, "option_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_5d3fa058de"
FOREIGN KEY ("authorization_id")
  REFERENCES "authorizations" ("id")
, CONSTRAINT "fk_rails_c5f0e7369a"
FOREIGN KEY ("option_id")
  REFERENCES "options" ("id")
)[0m
  [1m[35m (5.5ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_authorization_id" ON "option_authorizations"  ("authorization_id")[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_option_id" ON "option_authorizations"  ("option_id")[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_authorization_option" ON "option_authorizations"  ("authorization_id", "option_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014154"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to RenameColumnTypeInDimension (20180611045757)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "dimensions" RENAME COLUMN "type" TO "category"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180611045757"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-06-11 05:23:42.417632"], ["updated_at", "2018-06-11 05:23:42.417632"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Sa"], ["password_digest", "$2a$10$bQR5THqJu7vNeuvYNFhBk.3Nn7wziGvInVIk0nrysOlXeQ3uu.6rK"], ["role", "admin"], ["created_at", "2018-06-11 05:24:36.731186"], ["updated_at", "2018-06-11 05:24:36.731186"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "projects" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "ASSS"], ["created_at", "2018-06-11 05:25:51.307584"], ["updated_at", "2018-06-11 05:25:51.307584"]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-11 05:25:51.322816"], ["updated_at", "2018-06-11 05:25:51.322816"], ["user_id", 1], ["project_id", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mProjectMember Load (0.9ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (1.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProjectMember Load (1.0ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "ASDDD"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:27:57.750376"], ["updated_at", "2018-06-11 05:27:57.750376"]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.1ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "ASDDD"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:28:01.713946"], ["updated_at", "2018-06-11 05:28:01.713946"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "2"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:29:52.436438"], ["updated_at", "2018-06-11 05:29:52.436438"]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" ORDER BY "dimensions"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (1.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "options" ("name", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "cho Phat luoi vc ra"], ["dimension_id", 1], ["created_at", "2018-06-11 05:32:02.168294"], ["updated_at", "2018-06-11 05:32:02.168294"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT  "options".* FROM "options" WHERE "options"."dimension_id" = $1 LIMIT $2[0m  [["dimension_id", 1], ["LIMIT", 11]]
  [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT  "options".* FROM "options" ORDER BY "options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (0.9ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.7ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" ORDER BY "project_members"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "authorizations" ("project_member_id", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["project_member_id", 1], ["dimension_id", 1], ["created_at", "2018-06-11 05:36:23.221721"], ["updated_at", "2018-06-11 05:36:23.221721"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "authorizations" ("project_member_id", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["project_member_id", 1], ["dimension_id", 1], ["created_at", "2018-06-11 05:36:29.867889"], ["updated_at", "2018-06-11 05:36:29.867889"]]
  [1m[35m (0.5ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Load (0.9ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" ORDER BY "dimensions"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "authorizations" ("project_member_id", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["project_member_id", 1], ["dimension_id", 3], ["created_at", "2018-06-11 05:36:46.041990"], ["updated_at", "2018-06-11 05:36:46.041990"]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1[0m  [["project_member_id", 1]]
  [1m[36mDimension Load (1.1ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.4ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" ORDER BY "project_members"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mAuthorization Load (0.6ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mDimension Load (0.5ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" INNER JOIN "authorizations" ON "dimensions"."id" = "authorizations"."dimension_id" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mAuthorization Load (0.8ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT  "options".* FROM "options" ORDER BY "options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.9ms)[0m  [1m[32mINSERT INTO "option_authorizations" ("authorization_id", "option_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["authorization_id", 1], ["option_id", 1], ["created_at", "2018-06-11 07:02:30.164488"], ["updated_at", "2018-06-11 07:02:30.164488"]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT  "options".* FROM "options" ORDER BY "options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.7ms)[0m  [1m[32mINSERT INTO "option_authorizations" ("authorization_id", "option_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["authorization_id", 1], ["option_id", 1], ["created_at", "2018-06-11 07:02:34.542757"], ["updated_at", "2018-06-11 07:02:34.542757"]]
  [1m[35m (0.5ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mOptionAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1 ORDER BY "option_authorizations"."id" ASC LIMIT $2[0m  [["authorization_id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT  "options".* FROM "options" WHERE "options"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (29.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (22.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (1.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180605065536)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (23.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "password_digest" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605065536"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjects (20180605070310)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (19.8ms)[0m  [1m[35mCREATE TABLE "projects" ("id" bigserial primary key, "name" character varying, "description" character varying, "member_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070310"]]
  [1m[35m (4.0ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjectMembers (20180605070349)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (9.7ms)[0m  [1m[35mCREATE TABLE "project_members" ("id" bigserial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint, "project_id" bigint, CONSTRAINT "fk_rails_49ebe01c9d"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
, CONSTRAINT "fk_rails_f3b43b5269"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (7.7ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_user_id" ON "project_members"  ("user_id")[0m
  [1m[35m (8.2ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_project_id" ON "project_members"  ("project_id")[0m
  [1m[35m (8.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "project member index" ON "project_members"  ("user_id", "project_id")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070349"]]
  [1m[35m (4.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (11.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (7.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_projects_on_name" ON "projects"  ("name")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605073304"]]
  [1m[35m (3.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateDimensions (20180605074548)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (18.2ms)[0m  [1m[35mCREATE TABLE "dimensions" ("id" bigserial primary key, "name" character varying, "type" character varying, "project_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_6837067d06"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (8.7ms)[0m  [1m[35mCREATE  INDEX  "index_dimensions_on_project_id" ON "dimensions"  ("project_id")[0m
  [1m[35m (8.5ms)[0m  [1m[35mCREATE UNIQUE INDEX  "dimention_name" ON "dimensions"  ("name", "project_id")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074548"]]
  [1m[35m (6.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20180605074719)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (19.5ms)[0m  [1m[35mCREATE TABLE "options" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_7a39254793"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (9.8ms)[0m  [1m[35mCREATE  INDEX  "index_options_on_dimension_id" ON "options"  ("dimension_id")[0m
  [1m[35m (7.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "option_name" ON "options"  ("name", "dimension_id")[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074719"]]
  [1m[35m (7.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateAuthorizations (20180606014101)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (14.4ms)[0m  [1m[35mCREATE TABLE "authorizations" ("id" bigserial primary key, "project_member_id" bigint, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_4e2e5e0fb5"
FOREIGN KEY ("project_member_id")
  REFERENCES "project_members" ("id")
, CONSTRAINT "fk_rails_9e168b6a2c"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (10.7ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_project_member_id" ON "authorizations"  ("project_member_id")[0m
  [1m[35m (10.8ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_dimension_id" ON "authorizations"  ("dimension_id")[0m
  [1m[35m (12.5ms)[0m  [1m[35mCREATE UNIQUE INDEX  "authorization_key" ON "authorizations"  ("project_member_id", "dimension_id")[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014101"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (13.2ms)[0m  [1m[35mCREATE TABLE "option_authorizations" ("id" bigserial primary key, "authorization_id" bigint, "option_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_5d3fa058de"
FOREIGN KEY ("authorization_id")
  REFERENCES "authorizations" ("id")
, CONSTRAINT "fk_rails_c5f0e7369a"
FOREIGN KEY ("option_id")
  REFERENCES "options" ("id")
)[0m
  [1m[35m (8.8ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_authorization_id" ON "option_authorizations"  ("authorization_id")[0m
  [1m[35m (9.6ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_option_id" ON "option_authorizations"  ("option_id")[0m
  [1m[35m (10.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_authorization_option" ON "option_authorizations"  ("authorization_id", "option_id")[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014154"]]
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to RenameColumnTypeInDimension (20180611045757)
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "dimensions" RENAME COLUMN "type" TO "category"[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180611045757"]]
  [1m[35m (4.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-06-11 07:52:35.793125"], ["updated_at", "2018-06-11 07:52:35.793125"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:07:04 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1432.2ms)
Completed 200 OK in 1453ms (Views: 1441.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:07:06 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::DateTime):
  
app/graphql/types/user.rb:6:in `<class:User>'
app/graphql/types/user.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:12:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:3:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:07:36 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (27.9ms)
Completed 200 OK in 34ms (Views: 32.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:07:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 136ms (Views: 17.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:08:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement Query.user, tried:

        - `Types::QueryType#user`, which did not exist
        - `NilClass#user`, which did not exist
        - Looking up hash key `:user` or `"user"` on ``, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:09:45 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 22ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:10:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 16ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:14:18 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (29.0ms)
Completed 200 OK in 36ms (Views: 34.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:19 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 98ms (Views: 12.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:27 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:37 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:39 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:15:02 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.7ms)
Completed 200 OK in 30ms (Views: 23.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 82ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:15:40 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (22.8ms)
Completed 200 OK in 31ms (Views: 29.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:40 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 131ms (Views: 28.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:41 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `find' for nil:NilClass):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" LIMIT $1[0m  [["LIMIT", 11]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["username", "loc"], ["password_digest", "$2a$10$4uO5tS9I1.pYdPQczVUBiuS91Mhog1sCUzG5U/.uZtaQAM3YECG9i"], ["created_at", "2018-06-11 09:16:57.722418"], ["updated_at", "2018-06-11 09:16:57.722418"]]
  [1m[35m (6.0ms)[0m  [1m[35mCOMMIT[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:17:20 +0700
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (264.8ms)
Completed 200 OK in 280ms (Views: 271.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:17:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 102ms (Views: 12.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:17:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:19:43 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 30ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:19:48 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (25.7ms)
Completed 200 OK in 34ms (Views: 30.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:19:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 75ms (Views: 13.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:19:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:20:56 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.8ms)
Completed 200 OK in 33ms (Views: 28.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:20:56 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 92ms (Views: 16.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement User.role, tried:

        - `Types::User#role`, which did not exist
        - `String#role`, which did not exist
        - Looking up hash key `:role` or `"role"` on `OKKK`, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 14ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:21:35 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (21.6ms)
Completed 200 OK in 31ms (Views: 27.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:35 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 77ms (Views: 10.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:39 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:22:18 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1)\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1)\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:23:08 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (25.3ms)
Completed 200 OK in 31ms (Views: 29.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:09 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 99ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:12 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/types/query_type.rb:15:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:23:25 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (39.2ms)
Completed 200 OK in 61ms (Views: 54.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 114ms (Views: 18.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:28 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:23:49 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.9ms)
Completed 200 OK in 29ms (Views: 27.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 110ms (Views: 18.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:51 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 63ms (Views: 0.3ms | ActiveRecord: 10.8ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:25:14 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.5ms)
Completed 200 OK in 31ms (Views: 28.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:25:15 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "bede"):
  
app/graphql/types/user_type.rb:3:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:12:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:3:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:25:26 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (20.0ms)
Completed 200 OK in 25ms (Views: 23.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:25:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 82ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:26:21 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (24.7ms)
Completed 200 OK in 31ms (Views: 27.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:26:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 129ms (Views: 33.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:26:23 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:27:13 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (21.0ms)
Completed 200 OK in 30ms (Views: 27.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 127ms (Views: 16.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 20ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::Model):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:27:42 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.9ms)
Completed 200 OK in 24ms (Views: 22.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:42 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 96ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:45 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 32ms (Views: 0.6ms | ActiveRecord: 6.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:43:42 +0700
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (257.8ms)
Completed 200 OK in 274ms (Views: 265.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:43:42 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 116ms (Views: 12.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:43:45 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:44:05 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.5ms)
Completed 200 OK in 27ms (Views: 24.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:44:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 68ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:44:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:44:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `users'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:02:22 +0700
  [1m[35m (2.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1758.8ms)
Completed 200 OK in 1776ms (Views: 1764.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:02:24 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 32ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f39110ed070>, Mutations::Login::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:05:50 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.8ms)
Completed 200 OK in 22ms (Views: 19.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:05:51 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 23ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f39115038d0>, Mutations::Login::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:07:21 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (18.4ms)
Completed 200 OK in 23ms (Views: 21.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:07:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:07:59 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.0ms)
Completed 200 OK in 20ms (Views: 18.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:07:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:08:21 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (12.1ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:08:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 28ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f391c3bd290>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:08:37 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.0ms)
Completed 200 OK in 25ms (Views: 23.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:08:37 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 19ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::Login::LoginInput):
  
app/graphql/mutations/login.rb:8:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:09:02 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (31.3ms)
Completed 200 OK in 40ms (Views: 36.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:09:03 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::Login::LoginInput):
  
app/graphql/mutations/login.rb:8:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:09:10 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (28.4ms)
Completed 200 OK in 39ms (Views: 36.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:09:11 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 19ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f39116e4438>, Mutations::Login::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:11:15 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (12.0ms)
Completed 200 OK in 23ms (Views: 21.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:11:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::BaseInputObject::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:12:06 +0700
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (337.4ms)
Completed 200 OK in 355ms (Views: 345.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:12:07 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:13:04 +0700
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (264.6ms)
Completed 200 OK in 283ms (Views: 274.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:13:04 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::Login::LoginInput):
  
app/graphql/mutations/login.rb:8:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:13:31 +0700
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (269.8ms)
Completed 200 OK in 289ms (Views: 277.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:13:32 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 28ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0a1c0aa848>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:16:00 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.4ms)
Completed 200 OK in 31ms (Views: 28.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:16:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0a180dabc8>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:16:20 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (324.7ms)
Completed 200 OK in 342ms (Views: 329.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:16:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 38ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0ae40a8f48>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:17:01 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.6ms)
Completed 200 OK in 28ms (Views: 24.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:17:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0adc0d9c40>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:17:25 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.6ms)
Completed 200 OK in 33ms (Views: 29.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:17:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 147ms (Views: 17.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:30:04 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (17.5ms)
Completed 200 OK in 24ms (Views: 20.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:30:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 105ms (Views: 11.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:31:27 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (7.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 80ms (Views: 0.3ms | ActiveRecord: 42.2ms)


  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.9ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat"], ["password_digest", "$2a$10$iNZVapYpodM5p5IbOxPVjuKLvb5i16wSwjtSguTJpACUSQy7eP0lK"], ["role", "admin"], ["created_at", "2018-06-12 03:33:08.216649"], ["updated_at", "2018-06-12 03:33:08.216649"]]
  [1m[35m (3.8ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:33:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 108ms (Views: 0.3ms | ActiveRecord: 7.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:33:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 97ms (ActiveRecord: 0.5ms)


  
NameError (uninitialized constant Mutations::Login::AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:33:58 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 137ms (ActiveRecord: 10.6ms)


  
NameError (uninitialized constant AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:34:33 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.0ms)
Completed 200 OK in 32ms (Views: 27.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:34 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 108ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 119ms (ActiveRecord: 5.0ms)


  
NameError (uninitialized constant Mutations::Login::Services):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:34:45 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (36.1ms)
Completed 200 OK in 47ms (Views: 44.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 141ms (Views: 22.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 117ms (ActiveRecord: 7.5ms)


  
NameError (uninitialized constant Services):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:40:54 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (28.8ms)
Completed 200 OK in 33ms (Views: 31.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:40:55 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 140ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:40:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 113ms (ActiveRecord: 6.1ms)


  
NameError (uninitialized constant Mutations::Login::AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:52:23 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.8ms)
Completed 200 OK in 27ms (Views: 23.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:52:24 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 178ms (Views: 11.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:52:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 116ms (ActiveRecord: 9.3ms)


  
NameError (uninitialized constant AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:55:01 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (276.4ms)
Completed 200 OK in 292ms (Views: 282.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 136ms (Views: 20.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:04 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 128ms (ActiveRecord: 8.5ms)


  
NameError (uninitialized constant Authentication::AuthToken::JsonWebToken):
  
app/services/authentication/auth_token.rb:9:in `token'
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:55:34 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (262.9ms)
Completed 200 OK in 279ms (Views: 268.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:35 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 138ms (Views: 10.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 125ms (ActiveRecord: 7.9ms)


  
NameError (uninitialized constant AuthToken::JsonWebToken):
  
app/services/auth_token.rb:9:in `token'
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:56:11 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (288.1ms)
Completed 200 OK in 308ms (Views: 295.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:56:12 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 132ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:56:33 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 165ms (Views: 1.1ms | ActiveRecord: 7.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:56:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 93ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:57:08 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 88ms (Views: 0.2ms | ActiveRecord: 0.3ms)


  [1m[35m (3.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddEmailToUser (20180612041210)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (22.1ms)[0m  [1m[35mALTER TABLE "users" ADD "email" character varying[0m
  [1m[35m (22.7ms)[0m  [1m[35mCREATE  INDEX  "index_users_on_email" ON "users"  ("email")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180612041210"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (3.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:23:05 +0700
  [1m[35m (1.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (18.8ms)
Completed 200 OK in 26ms (Views: 21.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:23:06 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::Json):
  
app/graphql/mutations/create_user.rb:3:in `<class:CreateUser>'
app/graphql/mutations/create_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:9:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:23:29 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (21.0ms)
Completed 200 OK in 29ms (Views: 24.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:23:30 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
ArgumentError (unknown keyword: Types):
  
app/graphql/mutations/create_user.rb:5:in `<class:CreateUser>'
app/graphql/mutations/create_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:9:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:24:13 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (287.1ms)
Completed 200 OK in 303ms (Views: 294.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:24:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 165ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:24:56 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (13.5ms)
Completed 200 OK in 23ms (Views: 19.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:24:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 174ms (Views: 16.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:26:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `value' for Types::Json:Class):
  
app/graphql/types/json.rb:4:in `coerce_input'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:26:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (3.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "haha"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "haha"], ["LIMIT", 1]]
  [1m[36mUser Exists (1.0ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 174ms (Views: 2.0ms | ActiveRecord: 20.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (1.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 110ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:08 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat1"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (2.0ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat1"], ["password_digest", "$2a$10$BMmD.prZCpOE2IOZewa9TeC9B9Hioow3y.7vhfX3GV1QJKVKCsENS"], ["created_at", "2018-06-12 04:27:09.063178"], ["updated_at", "2018-06-12 04:27:09.063178"], ["email", "haha@gmail.com"]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat1"], ["id", 3], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha@gmail.com"], ["id", 3], ["LIMIT", 1]]
Completed 200 OK in 117ms (Views: 0.3ms | ActiveRecord: 7.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:27:46 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.2ms)
Completed 200 OK in 32ms (Views: 29.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 182ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat1"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat1"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 139ms (Views: 0.3ms | ActiveRecord: 7.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:28:03 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 105ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:28:10 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat2"], ["password_digest", "$2a$10$I1oEgLA/oeDKVGy6MxQ5.ON5HF0Wv.hO9tQ7TYSQcZzp.kqubA4aW"], ["created_at", "2018-06-12 04:28:10.702480"], ["updated_at", "2018-06-12 04:28:10.702480"], ["email", "haha2@gmail.com"]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat2"], ["id", 4], ["LIMIT", 1]]
  [1m[36mUser Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha2@gmail.com"], ["id", 4], ["LIMIT", 1]]
Completed 200 OK in 105ms (Views: 0.2ms | ActiveRecord: 5.3ms)


  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:30:15 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (281.4ms)
Completed 200 OK in 301ms (Views: 289.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:30:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 113ms (Views: 12.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:31:43 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 133ms (ActiveRecord: 8.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:32:27 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (294.0ms)
Completed 200 OK in 317ms (Views: 299.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:32:28 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 166ms (Views: 18.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:32:30 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 132ms (ActiveRecord: 11.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:35:40 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat3"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.9ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 100ms (ActiveRecord: 3.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:35:44 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat3"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat3"], ["password_digest", "$2a$10$qaNhKvg6wyOAFKc4LivF/epOG0YEdK7xKP2OL.U9Oj.gXGrUtKIkK"], ["created_at", "2018-06-12 04:35:44.566889"], ["updated_at", "2018-06-12 04:35:44.566889"], ["email", "haha3@gmail.com"]]
  [1m[35m (4.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (1.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat3"], ["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.9ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha3@gmail.com"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 117ms (Views: 1.3ms | ActiveRecord: 7.9ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:36:19 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (29.5ms)
Completed 200 OK in 36ms (Views: 32.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:36:19 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 168ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:36:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat3"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 134ms (ActiveRecord: 3.7ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:36:29 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat34"], ["password_digest", "$2a$10$PLKBC/tFhacgCGgW3ywzB.dqSRc7ey7NHcY2oeSu8na4YeaIkgHVm"], ["created_at", "2018-06-12 04:36:29.113191"], ["updated_at", "2018-06-12 04:36:29.113191"], ["email", "haha34@gmail.com"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat34"], ["id", 6], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha34@gmail.com"], ["id", 6], ["LIMIT", 1]]
Completed 200 OK in 110ms (Views: 0.3ms | ActiveRecord: 3.1ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:37:53 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (32.4ms)
Completed 200 OK in 38ms (Views: 35.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:37:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 173ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:37:55 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 115ms (ActiveRecord: 5.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:38:34 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.7ms)
Completed 200 OK in 31ms (Views: 29.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:38:35 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 184ms (Views: 16.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:38:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 120ms (Views: 0.3ms | ActiveRecord: 6.2ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:39:31 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (46.6ms)
Completed 200 OK in 54ms (Views: 51.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:39:32 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 173ms (Views: 9.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:39:38 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3334@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat214"], ["password_digest", "$2a$10$M3.O5HlUb61XLN2fh1.sD.RT3MplTOjblEMhBaKv6.bNsOnkmln1K"], ["created_at", "2018-06-12 04:39:38.144872"], ["updated_at", "2018-06-12 04:39:38.144872"], ["email", "haha3334@gmail.com"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat214"], ["id", 7], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha3334@gmail.com"], ["id", 7], ["LIMIT", 1]]
Completed 200 OK in 124ms (Views: 0.2ms | ActiveRecord: 8.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:41:59 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.0ms)
Completed 200 OK in 35ms (Views: 31.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:41:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 124ms (Views: 13.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:15 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3334@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3334@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 125ms (Views: 0.3ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:19 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhdasdat214"], ["password_digest", "$2a$10$k0jDGcGo4g.KijJVa5DYIOvL8pIPrO.SXO29CIHalVO9B6EZpdWam"], ["created_at", "2018-06-12 04:42:19.720625"], ["updated_at", "2018-06-12 04:42:19.720625"], ["email", "haha33dadd34@gmail.com"]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhdasdat214"], ["id", 8], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha33dadd34@gmail.com"], ["id", 8], ["LIMIT", 1]]
Completed 200 OK in 102ms (Views: 0.2ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha33dadd34@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 141ms (Views: 0.3ms | ActiveRecord: 6.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdasdat214\\\",\\\"email\\\":\\\"hahass33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdasdat214\\\",\\\"email\\\":\\\"hahass33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahass33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnddahdasdat214"], ["password_digest", "$2a$10$dZCn5/5TSDdWTQUg6/w3ueYspPr1tsKKkEz3aA8hoJLMKdGpmllM2"], ["created_at", "2018-06-12 04:42:53.272337"], ["updated_at", "2018-06-12 04:42:53.272337"], ["email", "hahass33dadd34@gmail.com"]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnddahdasdat214"], ["id", 9], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "hahass33dadd34@gmail.com"], ["id", 9], ["LIMIT", 1]]
Completed 200 OK in 105ms (Views: 0.3ms | ActiveRecord: 4.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:43:17 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (31.8ms)
Completed 200 OK in 51ms (Views: 43.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:43:18 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 157ms (Views: 21.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:43:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdddasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahasssss33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnddahdddasdat214"], ["password_digest", "$2a$10$k8yUlfTvGb6O9Ee8fv4Pt.TQEKbBp2Ygwuwrf9YbAOkFHFtb10Jv2"], ["created_at", "2018-06-12 04:43:26.610446"], ["updated_at", "2018-06-12 04:43:26.610446"], ["email", "hahasssss33dadd34@gmail.com"]]
  [1m[35m (4.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnddahdddasdat214"], ["id", 10], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "hahasssss33dadd34@gmail.com"], ["id", 10], ["LIMIT", 1]]
Completed 200 OK in 124ms (Views: 0.2ms | ActiveRecord: 12.2ms)



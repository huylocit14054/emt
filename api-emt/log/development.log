  [1m[35m (36.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (8.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180605065536)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (9.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "password_digest" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605065536"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjects (20180605070310)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (8.7ms)[0m  [1m[35mCREATE TABLE "projects" ("id" bigserial primary key, "name" character varying, "description" character varying, "member_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070310"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjectMembers (20180605070349)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.6ms)[0m  [1m[35mCREATE TABLE "project_members" ("id" bigserial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint, "project_id" bigint, CONSTRAINT "fk_rails_49ebe01c9d"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
, CONSTRAINT "fk_rails_f3b43b5269"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_user_id" ON "project_members"  ("user_id")[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_project_id" ON "project_members"  ("project_id")[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE UNIQUE INDEX  "project member index" ON "project_members"  ("user_id", "project_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070349"]]
  [1m[35m (1.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.0ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-06-05 07:11:10.253069"], ["updated_at", "2018-06-05 07:11:10.253069"]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Loc"], ["password_digest", "$2a$10$0.yvUT82Lkwnv/.tjyI4ZuKLcNgnKh6W1yp8J7NGrsBEYpnmrIukW"], ["role", "admin"], ["created_at", "2018-06-05 07:30:41.084111"], ["updated_at", "2018-06-05 07:30:41.084111"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Loc"], ["password_digest", "$2a$10$U1aqsLSLYF8qMibN0h3/tOoo5qvcOhJoddOm/SkUbjwwT7dsT22Ye"], ["role", "admin"], ["created_at", "2018-06-05 07:31:06.896898"], ["updated_at", "2018-06-05 07:31:06.896898"]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.8ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = $1[0m  [["id", 2]]
  [1m[35m (1.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_project_on_name" ON "project"  ("name")[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_projects_on_name" ON "projects"  ("name")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605073304"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Loc"], ["password_digest", "$2a$10$lblCQP.8ij.33WQ2JaVhXOhETfJVapx.ImU7sI7RC1qGLrUKg3Jz6"], ["role", "admin"], ["created_at", "2018-06-05 07:34:24.665448"], ["updated_at", "2018-06-05 07:34:24.665448"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Nhat"], ["password_digest", "$2a$10$paeQ5hzwB03g2Fp4Oa9v/On6OmvNpjH30WymElxtZf3OuQiSxlSEO"], ["role", "admin"], ["created_at", "2018-06-05 07:34:30.671163"], ["updated_at", "2018-06-05 07:34:30.671163"]]
  [1m[35m (2.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "projects" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "project 1"], ["created_at", "2018-06-05 07:38:48.148140"], ["updated_at", "2018-06-05 07:38:48.148140"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (0.7ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-05 07:39:52.598297"], ["updated_at", "2018-06-05 07:39:52.598297"], ["user_id", 1], ["project_id", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.5ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-05 07:40:04.434121"], ["updated_at", "2018-06-05 07:40:04.434121"], ["user_id", 1], ["project_id", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-05 07:40:21.623980"], ["updated_at", "2018-06-05 07:40:21.623980"], ["user_id", 4], ["project_id", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 1]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mProject Load (1.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateDimensions (20180605074548)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.4ms)[0m  [1m[35mCREATE TABLE "dimensions" ("id" bigserial primary key, "name" character varying, "type" character varying, "project_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_6837067d06"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX  "index_dimensions_on_project_id" ON "dimensions"  ("project_id")[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "dimention_name" ON "dimensions"  ("name", "project_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074548"]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateMultipleChoiceValues (20180605074719)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.9ms)[0m  [1m[35mCREATE TABLE "multiple_choice_values" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_050871e438"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE  INDEX  "index_multiple_choice_values_on_dimension_id" ON "multiple_choice_values"  ("dimension_id")[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_value_name" ON "multiple_choice_values"  ("name", "dimension")[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateMultipleChoiceValues (20180605074719)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.2ms)[0m  [1m[35mCREATE TABLE "multiple_choice_values" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_050871e438"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE  INDEX  "index_multiple_choice_values_on_dimension_id" ON "multiple_choice_values"  ("dimension_id")[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_value_name" ON "multiple_choice_values"  ("name", "dimension_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074719"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.0ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateAuthorizations (20180606014101)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (15.2ms)[0m  [1m[35mCREATE TABLE "authorizations" ("id" bigserial primary key, "project_member_id" bigint, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_4e2e5e0fb5"
FOREIGN KEY ("project_member_id")
  REFERENCES "project_members" ("id")
, CONSTRAINT "fk_rails_9e168b6a2c"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_project_member_id" ON "authorizations"  ("project_member_id")[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_dimension_id" ON "authorizations"  ("dimension_id")[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE UNIQUE INDEX  "authorization_key" ON "authorizations"  ("project_member_id", "dimension_id")[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014101"]]
  [1m[35m (5.0ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateValueAuthorizations (20180606014154)
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (8.0ms)[0m  [1m[35mCREATE TABLE "value_authorizations" ("id" bigserial primary key, "authorization_id" bigint, "multiple_choice_value_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_7f9c89633c"
FOREIGN KEY ("authorization_id")
  REFERENCES "authorizations" ("id")
, CONSTRAINT "fk_rails_6d84d18fc0"
FOREIGN KEY ("multiple_choice_value_id")
  REFERENCES "multiple_choice_values" ("id")
)[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE  INDEX  "index_value_authorizations_on_authorization_id" ON "value_authorizations"  ("authorization_id")[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE  INDEX  "index_value_authorizations_on_multiple_choice_value_id" ON "value_authorizations"  ("multiple_choice_value_id")[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_authenticate_value" ON "value_authorizations"  ("authorization_id", "multiple_choice_value_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014154"]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" LIMIT $1[0m  [["LIMIT", 11]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (4.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (2.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (1.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to RenameColumnTypeInDimension (20180611045757)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "dimensions" RENAME COLUMN "type" TO "category"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180611045757"]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.5ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "asd"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:00:10.719967"], ["updated_at", "2018-06-11 05:00:10.719967"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDimension Load (1.1ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (120.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "enhance-url-tagging_development"[0m
  [1m[35m (112.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "enhance-url-tagging_test"[0m
  [1m[35m (9.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (6.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180605065536)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "password_digest" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605065536"]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjects (20180605070310)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.5ms)[0m  [1m[35mCREATE TABLE "projects" ("id" bigserial primary key, "name" character varying, "description" character varying, "member_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070310"]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjectMembers (20180605070349)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.6ms)[0m  [1m[35mCREATE TABLE "project_members" ("id" bigserial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint, "project_id" bigint, CONSTRAINT "fk_rails_49ebe01c9d"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
, CONSTRAINT "fk_rails_f3b43b5269"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_user_id" ON "project_members"  ("user_id")[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_project_id" ON "project_members"  ("project_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "project member index" ON "project_members"  ("user_id", "project_id")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070349"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_projects_on_name" ON "projects"  ("name")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605073304"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateDimensions (20180605074548)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.3ms)[0m  [1m[35mCREATE TABLE "dimensions" ("id" bigserial primary key, "name" character varying, "type" character varying, "project_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_6837067d06"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE  INDEX  "index_dimensions_on_project_id" ON "dimensions"  ("project_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "dimention_name" ON "dimensions"  ("name", "project_id")[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074548"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20180605074719)
  [1m[35m (1.0ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateOptions (20180605074719)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "options" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_7a39254793"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE  INDEX  "index_options_on_dimension_id" ON "options"  ("dimension_id")[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE UNIQUE INDEX  "option_name" ON "options"  ("name", "dimension_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074719"]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateAuthorizations (20180606014101)
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "authorizations" ("id" bigserial primary key, "project_member_id" bigint, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_4e2e5e0fb5"
FOREIGN KEY ("project_member_id")
  REFERENCES "project_members" ("id")
, CONSTRAINT "fk_rails_9e168b6a2c"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_project_member_id" ON "authorizations"  ("project_member_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_dimension_id" ON "authorizations"  ("dimension_id")[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "authorization_key" ON "authorizations"  ("project_member_id", "dimension_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014101"]]
  [1m[35m (4.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (1.5ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (0.1ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "option_authorizations" ("id" bigserial primary key, "authorization_id" bigint, "option_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_5d3fa058de"
FOREIGN KEY ("authorization_id")
  REFERENCES "authorizations" ("id")
, CONSTRAINT "fk_rails_c5f0e7369a"
FOREIGN KEY ("option_id")
  REFERENCES "options" ("id")
)[0m
  [1m[35m (5.5ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_authorization_id" ON "option_authorizations"  ("authorization_id")[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_option_id" ON "option_authorizations"  ("option_id")[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_authorization_option" ON "option_authorizations"  ("authorization_id", "option_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014154"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to RenameColumnTypeInDimension (20180611045757)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "dimensions" RENAME COLUMN "type" TO "category"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180611045757"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-06-11 05:23:42.417632"], ["updated_at", "2018-06-11 05:23:42.417632"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "Sa"], ["password_digest", "$2a$10$bQR5THqJu7vNeuvYNFhBk.3Nn7wziGvInVIk0nrysOlXeQ3uu.6rK"], ["role", "admin"], ["created_at", "2018-06-11 05:24:36.731186"], ["updated_at", "2018-06-11 05:24:36.731186"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "projects" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "ASSS"], ["created_at", "2018-06-11 05:25:51.307584"], ["updated_at", "2018-06-11 05:25:51.307584"]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["created_at", "2018-06-11 05:25:51.322816"], ["updated_at", "2018-06-11 05:25:51.322816"], ["user_id", 1], ["project_id", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 1]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mProjectMember Load (0.9ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[36mProject Load (1.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" INNER JOIN "project_members" ON "projects"."id" = "project_members"."project_id" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProjectMember Load (1.0ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "ASDDD"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:27:57.750376"], ["updated_at", "2018-06-11 05:27:57.750376"]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.1ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "ASDDD"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:28:01.713946"], ["updated_at", "2018-06-11 05:28:01.713946"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "2"], ["category", "multiple"], ["project_id", 1], ["created_at", "2018-06-11 05:29:52.436438"], ["updated_at", "2018-06-11 05:29:52.436438"]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" ORDER BY "dimensions"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (1.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "options" ("name", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "cho Phat luoi vc ra"], ["dimension_id", 1], ["created_at", "2018-06-11 05:32:02.168294"], ["updated_at", "2018-06-11 05:32:02.168294"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT  "options".* FROM "options" WHERE "options"."dimension_id" = $1 LIMIT $2[0m  [["dimension_id", 1], ["LIMIT", 11]]
  [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT  "options".* FROM "options" ORDER BY "options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (0.9ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.7ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" ORDER BY "project_members"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "authorizations" ("project_member_id", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["project_member_id", 1], ["dimension_id", 1], ["created_at", "2018-06-11 05:36:23.221721"], ["updated_at", "2018-06-11 05:36:23.221721"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "authorizations" ("project_member_id", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["project_member_id", 1], ["dimension_id", 1], ["created_at", "2018-06-11 05:36:29.867889"], ["updated_at", "2018-06-11 05:36:29.867889"]]
  [1m[35m (0.5ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Load (0.9ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" ORDER BY "dimensions"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "authorizations" ("project_member_id", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["project_member_id", 1], ["dimension_id", 3], ["created_at", "2018-06-11 05:36:46.041990"], ["updated_at", "2018-06-11 05:36:46.041990"]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1[0m  [["project_member_id", 1]]
  [1m[36mDimension Load (1.1ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.4ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" ORDER BY "project_members"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mAuthorization Load (0.6ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mDimension Load (0.5ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" INNER JOIN "authorizations" ON "dimensions"."id" = "authorizations"."dimension_id" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mAuthorization Load (0.8ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" ORDER BY "authorizations"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT  "options".* FROM "options" ORDER BY "options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.9ms)[0m  [1m[32mINSERT INTO "option_authorizations" ("authorization_id", "option_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["authorization_id", 1], ["option_id", 1], ["created_at", "2018-06-11 07:02:30.164488"], ["updated_at", "2018-06-11 07:02:30.164488"]]
  [1m[35m (1.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT  "options".* FROM "options" ORDER BY "options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.7ms)[0m  [1m[32mINSERT INTO "option_authorizations" ("authorization_id", "option_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["authorization_id", 1], ["option_id", 1], ["created_at", "2018-06-11 07:02:34.542757"], ["updated_at", "2018-06-11 07:02:34.542757"]]
  [1m[35m (0.5ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mOptionAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1 ORDER BY "option_authorizations"."id" ASC LIMIT $2[0m  [["authorization_id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT  "options".* FROM "options" WHERE "options"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (29.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (22.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (1.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180605065536)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (23.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "password_digest" character varying, "role" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605065536"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjects (20180605070310)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (19.8ms)[0m  [1m[35mCREATE TABLE "projects" ("id" bigserial primary key, "name" character varying, "description" character varying, "member_count" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070310"]]
  [1m[35m (4.0ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateProjectMembers (20180605070349)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (9.7ms)[0m  [1m[35mCREATE TABLE "project_members" ("id" bigserial primary key, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, "user_id" bigint, "project_id" bigint, CONSTRAINT "fk_rails_49ebe01c9d"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
, CONSTRAINT "fk_rails_f3b43b5269"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (7.7ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_user_id" ON "project_members"  ("user_id")[0m
  [1m[35m (8.2ms)[0m  [1m[35mCREATE  INDEX  "index_project_members_on_project_id" ON "project_members"  ("project_id")[0m
  [1m[35m (8.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "project member index" ON "project_members"  ("user_id", "project_id")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605070349"]]
  [1m[35m (4.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddIndexToUserAndProject (20180605073304)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (11.4ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_username" ON "users"  ("username")[0m
  [1m[35m (7.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_projects_on_name" ON "projects"  ("name")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605073304"]]
  [1m[35m (3.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateDimensions (20180605074548)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (18.2ms)[0m  [1m[35mCREATE TABLE "dimensions" ("id" bigserial primary key, "name" character varying, "type" character varying, "project_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_6837067d06"
FOREIGN KEY ("project_id")
  REFERENCES "projects" ("id")
)[0m
  [1m[35m (8.7ms)[0m  [1m[35mCREATE  INDEX  "index_dimensions_on_project_id" ON "dimensions"  ("project_id")[0m
  [1m[35m (8.5ms)[0m  [1m[35mCREATE UNIQUE INDEX  "dimention_name" ON "dimensions"  ("name", "project_id")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074548"]]
  [1m[35m (6.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20180605074719)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (19.5ms)[0m  [1m[35mCREATE TABLE "options" ("id" bigserial primary key, "name" character varying, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_7a39254793"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (9.8ms)[0m  [1m[35mCREATE  INDEX  "index_options_on_dimension_id" ON "options"  ("dimension_id")[0m
  [1m[35m (7.7ms)[0m  [1m[35mCREATE UNIQUE INDEX  "option_name" ON "options"  ("name", "dimension_id")[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180605074719"]]
  [1m[35m (7.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateAuthorizations (20180606014101)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (14.4ms)[0m  [1m[35mCREATE TABLE "authorizations" ("id" bigserial primary key, "project_member_id" bigint, "dimension_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_4e2e5e0fb5"
FOREIGN KEY ("project_member_id")
  REFERENCES "project_members" ("id")
, CONSTRAINT "fk_rails_9e168b6a2c"
FOREIGN KEY ("dimension_id")
  REFERENCES "dimensions" ("id")
)[0m
  [1m[35m (10.7ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_project_member_id" ON "authorizations"  ("project_member_id")[0m
  [1m[35m (10.8ms)[0m  [1m[35mCREATE  INDEX  "index_authorizations_on_dimension_id" ON "authorizations"  ("dimension_id")[0m
  [1m[35m (12.5ms)[0m  [1m[35mCREATE UNIQUE INDEX  "authorization_key" ON "authorizations"  ("project_member_id", "dimension_id")[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014101"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptionAuthorizations (20180606014154)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (13.2ms)[0m  [1m[35mCREATE TABLE "option_authorizations" ("id" bigserial primary key, "authorization_id" bigint, "option_id" bigint, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL, CONSTRAINT "fk_rails_5d3fa058de"
FOREIGN KEY ("authorization_id")
  REFERENCES "authorizations" ("id")
, CONSTRAINT "fk_rails_c5f0e7369a"
FOREIGN KEY ("option_id")
  REFERENCES "options" ("id")
)[0m
  [1m[35m (8.8ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_authorization_id" ON "option_authorizations"  ("authorization_id")[0m
  [1m[35m (9.6ms)[0m  [1m[35mCREATE  INDEX  "index_option_authorizations_on_option_id" ON "option_authorizations"  ("option_id")[0m
  [1m[35m (10.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "multiple_choice_authorization_option" ON "option_authorizations"  ("authorization_id", "option_id")[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180606014154"]]
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to RenameColumnTypeInDimension (20180611045757)
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.5ms)[0m  [1m[35mALTER TABLE "dimensions" RENAME COLUMN "type" TO "category"[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180611045757"]]
  [1m[35m (4.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-06-11 07:52:35.793125"], ["updated_at", "2018-06-11 07:52:35.793125"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:07:04 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1432.2ms)
Completed 200 OK in 1453ms (Views: 1441.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:07:06 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::DateTime):
  
app/graphql/types/user.rb:6:in `<class:User>'
app/graphql/types/user.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:12:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:3:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:07:36 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (27.9ms)
Completed 200 OK in 34ms (Views: 32.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:07:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 136ms (Views: 17.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:08:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement Query.user, tried:

        - `Types::QueryType#user`, which did not exist
        - `NilClass#user`, which did not exist
        - Looking up hash key `:user` or `"user"` on ``, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:09:45 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 22ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:10:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 16ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:14:18 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (29.0ms)
Completed 200 OK in 36ms (Views: 34.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:19 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 98ms (Views: 12.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:27 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user{\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:37 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:14:39 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:15:02 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.7ms)
Completed 200 OK in 30ms (Views: 23.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 82ms (Views: 15.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:15:40 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (22.8ms)
Completed 200 OK in 31ms (Views: 29.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:40 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 131ms (Views: 28.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:15:41 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `find' for nil:NilClass):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" LIMIT $1[0m  [["LIMIT", 11]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["username", "loc"], ["password_digest", "$2a$10$4uO5tS9I1.pYdPQczVUBiuS91Mhog1sCUzG5U/.uZtaQAM3YECG9i"], ["created_at", "2018-06-11 09:16:57.722418"], ["updated_at", "2018-06-11 09:16:57.722418"]]
  [1m[35m (6.0ms)[0m  [1m[35mCOMMIT[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:17:20 +0700
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (264.8ms)
Completed 200 OK in 280ms (Views: 271.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:17:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 102ms (Views: 12.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:17:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:19:43 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 30ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:19:48 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (25.7ms)
Completed 200 OK in 34ms (Views: 30.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:19:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 75ms (Views: 13.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:19:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:20:56 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.8ms)
Completed 200 OK in 33ms (Views: 28.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:20:56 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 92ms (Views: 16.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
RuntimeError (        Failed to implement User.role, tried:

        - `Types::User#role`, which did not exist
        - `String#role`, which did not exist
        - Looking up hash key `:role` or `"role"` on `OKKK`, but it wasn't a Hash

        To implement this field, define one of the methods above (and check for typos)
):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 14ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:21:35 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (21.6ms)
Completed 200 OK in 31ms (Views: 27.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:35 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 77ms (Views: 10.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:21:39 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1){\n    role\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:22:18 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1)\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1)\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:23:08 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (25.3ms)
Completed 200 OK in 31ms (Views: 29.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:09 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 99ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:12 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 0)):
  
app/graphql/types/query_type.rb:15:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:23:25 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (39.2ms)
Completed 200 OK in 61ms (Views: 54.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 114ms (Views: 18.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:28 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:23:49 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.9ms)
Completed 200 OK in 29ms (Views: 27.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 110ms (Views: 18.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:23:51 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 63ms (Views: 0.3ms | ActiveRecord: 10.8ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:25:14 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.5ms)
Completed 200 OK in 31ms (Views: 28.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:25:15 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
RuntimeError (The new name override method is `graphql_name`, not `name`. Usage: graphql_name "bede"):
  
app/graphql/types/user_type.rb:3:in `<class:UserType>'
app/graphql/types/user_type.rb:1:in `<top (required)>'
app/graphql/types/query_type.rb:12:in `<class:QueryType>'
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:3:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:25:26 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (20.0ms)
Completed 200 OK in 25ms (Views: 23.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:25:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 82ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:26:21 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (24.7ms)
Completed 200 OK in 31ms (Views: 27.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:26:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 129ms (Views: 33.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:26:23 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:27:13 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (21.0ms)
Completed 200 OK in 30ms (Views: 27.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 127ms (Views: 16.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 20ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::Model):
  
app/graphql/types/query_type.rb:16:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:27:42 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.9ms)
Completed 200 OK in 24ms (Views: 22.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:42 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 96ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:27:45 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 32ms (Views: 0.6ms | ActiveRecord: 6.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:43:42 +0700
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (257.8ms)
Completed 200 OK in 274ms (Views: 265.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:43:42 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 116ms (Views: 12.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:43:45 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-11 16:44:05 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.5ms)
Completed 200 OK in 27ms (Views: 24.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:44:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 68ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:44:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-11 16:44:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:16:in `users'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:02:22 +0700
  [1m[35m (2.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1758.8ms)
Completed 200 OK in 1776ms (Views: 1764.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:02:24 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 32ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f39110ed070>, Mutations::Login::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:05:50 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.8ms)
Completed 200 OK in 22ms (Views: 19.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:05:51 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 23ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f39115038d0>, Mutations::Login::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:07:21 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (18.4ms)
Completed 200 OK in 23ms (Views: 21.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:07:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:07:59 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.0ms)
Completed 200 OK in 20ms (Views: 18.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:07:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:08:21 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (12.1ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:08:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 28ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f391c3bd290>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:08:37 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.0ms)
Completed 200 OK in 25ms (Views: 23.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:08:37 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 19ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::Login::LoginInput):
  
app/graphql/mutations/login.rb:8:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:09:02 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (31.3ms)
Completed 200 OK in 40ms (Views: 36.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:09:03 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::Login::LoginInput):
  
app/graphql/mutations/login.rb:8:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:09:10 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (28.4ms)
Completed 200 OK in 39ms (Views: 36.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:09:11 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 19ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f39116e4438>, Mutations::Login::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:11:15 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (12.0ms)
Completed 200 OK in 23ms (Views: 21.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:11:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::BaseInputObject::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:12:06 +0700
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (337.4ms)
Completed 200 OK in 355ms (Views: 345.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:12:07 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::LoginInput):
  
app/graphql/mutations/login.rb:4:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:13:04 +0700
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (264.6ms)
Completed 200 OK in 283ms (Views: 274.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:13:04 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::Login::LoginInput):
  
app/graphql/mutations/login.rb:8:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:13:31 +0700
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (269.8ms)
Completed 200 OK in 289ms (Views: 277.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:13:32 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 28ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0a1c0aa848>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:16:00 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.4ms)
Completed 200 OK in 31ms (Views: 28.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:16:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0a180dabc8>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:16:20 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (324.7ms)
Completed 200 OK in 342ms (Views: 329.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:16:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 38ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0ae40a8f48>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:17:01 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.6ms)
Completed 200 OK in 28ms (Views: 24.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:17:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
RuntimeError (Duplicate type definition found for name 'LoginInput' (#<Class:0x00007f0adc0d9c40>, Types::LoginInput})):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:17:25 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.6ms)
Completed 200 OK in 33ms (Views: 29.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:17:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 147ms (Views: 17.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:30:04 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (17.5ms)
Completed 200 OK in 24ms (Views: 20.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:30:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 105ms (Views: 11.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:31:27 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (7.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 80ms (Views: 0.3ms | ActiveRecord: 42.2ms)


  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.9ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "role", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat"], ["password_digest", "$2a$10$iNZVapYpodM5p5IbOxPVjuKLvb5i16wSwjtSguTJpACUSQy7eP0lK"], ["role", "admin"], ["created_at", "2018-06-12 03:33:08.216649"], ["updated_at", "2018-06-12 03:33:08.216649"]]
  [1m[35m (3.8ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:33:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasdd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 108ms (Views: 0.3ms | ActiveRecord: 7.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:33:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 97ms (ActiveRecord: 0.5ms)


  
NameError (uninitialized constant Mutations::Login::AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:33:58 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 137ms (ActiveRecord: 10.6ms)


  
NameError (uninitialized constant AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:34:33 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (23.0ms)
Completed 200 OK in 32ms (Views: 27.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:34 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 108ms (Views: 13.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 119ms (ActiveRecord: 5.0ms)


  
NameError (uninitialized constant Mutations::Login::Services):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:34:45 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (36.1ms)
Completed 200 OK in 47ms (Views: 44.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 141ms (Views: 22.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:34:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 117ms (ActiveRecord: 7.5ms)


  
NameError (uninitialized constant Services):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:40:54 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (28.8ms)
Completed 200 OK in 33ms (Views: 31.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:40:55 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 140ms (Views: 9.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:40:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 113ms (ActiveRecord: 6.1ms)


  
NameError (uninitialized constant Mutations::Login::AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:52:23 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.8ms)
Completed 200 OK in 27ms (Views: 23.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:52:24 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 178ms (Views: 11.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:52:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 116ms (ActiveRecord: 9.3ms)


  
NameError (uninitialized constant AuthToken):
  
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:55:01 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (276.4ms)
Completed 200 OK in 292ms (Views: 282.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 136ms (Views: 20.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:04 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 128ms (ActiveRecord: 8.5ms)


  
NameError (uninitialized constant Authentication::AuthToken::JsonWebToken):
  
app/services/authentication/auth_token.rb:9:in `token'
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:55:34 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (262.9ms)
Completed 200 OK in 279ms (Views: 268.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:35 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 138ms (Views: 10.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:55:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 125ms (ActiveRecord: 7.9ms)


  
NameError (uninitialized constant AuthToken::JsonWebToken):
  
app/services/auth_token.rb:9:in `token'
app/graphql/mutations/login.rb:18:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 10:56:11 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (288.1ms)
Completed 200 OK in 308ms (Views: 295.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:56:12 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 132ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:56:33 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 165ms (Views: 1.1ms | ActiveRecord: 7.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:56:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"dasd\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 93ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:57:08 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  login(input: {username: \"quangnhat\", password: \"quangnhat\"}){\n    token,\n    user {\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 88ms (Views: 0.2ms | ActiveRecord: 0.3ms)


  [1m[35m (3.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (1.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddEmailToUser (20180612041210)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (22.1ms)[0m  [1m[35mALTER TABLE "users" ADD "email" character varying[0m
  [1m[35m (22.7ms)[0m  [1m[35mCREATE  INDEX  "index_users_on_email" ON "users"  ("email")[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180612041210"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (3.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:23:05 +0700
  [1m[35m (1.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (18.8ms)
Completed 200 OK in 26ms (Views: 21.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:23:06 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::Json):
  
app/graphql/mutations/create_user.rb:3:in `<class:CreateUser>'
app/graphql/mutations/create_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:9:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:23:29 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (21.0ms)
Completed 200 OK in 29ms (Views: 24.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:23:30 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
ArgumentError (unknown keyword: Types):
  
app/graphql/mutations/create_user.rb:5:in `<class:CreateUser>'
app/graphql/mutations/create_user.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:9:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:24:13 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (287.1ms)
Completed 200 OK in 303ms (Views: 294.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:24:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 165ms (Views: 14.0ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:24:56 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (13.5ms)
Completed 200 OK in 23ms (Views: 19.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:24:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 174ms (Views: 16.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:26:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `value' for Types::Json:Class):
  
app/graphql/types/json.rb:4:in `coerce_input'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:26:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"haha\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (3.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "haha"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "haha"], ["LIMIT", 1]]
  [1m[36mUser Exists (1.0ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 174ms (Views: 2.0ms | ActiveRecord: 20.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (1.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 110ms (Views: 0.2ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:08 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n    user{\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat1"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (2.0ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat1"], ["password_digest", "$2a$10$BMmD.prZCpOE2IOZewa9TeC9B9Hioow3y.7vhfX3GV1QJKVKCsENS"], ["created_at", "2018-06-12 04:27:09.063178"], ["updated_at", "2018-06-12 04:27:09.063178"], ["email", "haha@gmail.com"]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat1"], ["id", 3], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha@gmail.com"], ["id", 3], ["LIMIT", 1]]
Completed 200 OK in 117ms (Views: 0.3ms | ActiveRecord: 7.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:27:46 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.2ms)
Completed 200 OK in 32ms (Views: 29.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 182ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:27:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat1\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat1"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat1"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 139ms (Views: 0.3ms | ActiveRecord: 7.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:28:03 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 105ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:28:10 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat2"], ["password_digest", "$2a$10$I1oEgLA/oeDKVGy6MxQ5.ON5HF0Wv.hO9tQ7TYSQcZzp.kqubA4aW"], ["created_at", "2018-06-12 04:28:10.702480"], ["updated_at", "2018-06-12 04:28:10.702480"], ["email", "haha2@gmail.com"]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat2"], ["id", 4], ["LIMIT", 1]]
  [1m[36mUser Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha2@gmail.com"], ["id", 4], ["LIMIT", 1]]
Completed 200 OK in 105ms (Views: 0.2ms | ActiveRecord: 5.3ms)


  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:30:15 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (281.4ms)
Completed 200 OK in 301ms (Views: 289.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:30:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 113ms (Views: 12.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:31:43 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 133ms (ActiveRecord: 8.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:32:27 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (294.0ms)
Completed 200 OK in 317ms (Views: 299.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:32:28 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 166ms (Views: 18.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:32:30 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat2\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat2"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 132ms (ActiveRecord: 11.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:35:40 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha2@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat3"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.9ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha2@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 100ms (ActiveRecord: 3.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:35:44 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat3"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat3"], ["password_digest", "$2a$10$qaNhKvg6wyOAFKc4LivF/epOG0YEdK7xKP2OL.U9Oj.gXGrUtKIkK"], ["created_at", "2018-06-12 04:35:44.566889"], ["updated_at", "2018-06-12 04:35:44.566889"], ["email", "haha3@gmail.com"]]
  [1m[35m (4.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (1.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat3"], ["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.9ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha3@gmail.com"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 117ms (Views: 1.3ms | ActiveRecord: 7.9ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:36:19 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (29.5ms)
Completed 200 OK in 36ms (Views: 32.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:36:19 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 168ms (Views: 14.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:36:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat3\\\",\\\"email\\\":\\\"haha3@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat3"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 134ms (ActiveRecord: 3.7ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:36:29 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat34"], ["password_digest", "$2a$10$PLKBC/tFhacgCGgW3ywzB.dqSRc7ey7NHcY2oeSu8na4YeaIkgHVm"], ["created_at", "2018-06-12 04:36:29.113191"], ["updated_at", "2018-06-12 04:36:29.113191"], ["email", "haha34@gmail.com"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat34"], ["id", 6], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha34@gmail.com"], ["id", 6], ["LIMIT", 1]]
Completed 200 OK in 110ms (Views: 0.3ms | ActiveRecord: 3.1ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:37:53 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (32.4ms)
Completed 200 OK in 38ms (Views: 35.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:37:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 173ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:37:55 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 422 Unprocessable Entity in 115ms (ActiveRecord: 5.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: Username has already been taken, Email has already been taken):
  
app/graphql/mutations/create_user.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:38:34 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.7ms)
Completed 200 OK in 31ms (Views: 29.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:38:35 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 184ms (Views: 16.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:38:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat34\\\",\\\"email\\\":\\\"haha34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat34"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha34@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 120ms (Views: 0.3ms | ActiveRecord: 6.2ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:39:31 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (46.6ms)
Completed 200 OK in 54ms (Views: 51.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:39:32 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 173ms (Views: 9.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:39:38 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3334@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhat214"], ["password_digest", "$2a$10$M3.O5HlUb61XLN2fh1.sD.RT3MplTOjblEMhBaKv6.bNsOnkmln1K"], ["created_at", "2018-06-12 04:39:38.144872"], ["updated_at", "2018-06-12 04:39:38.144872"], ["email", "haha3334@gmail.com"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat214"], ["id", 7], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha3334@gmail.com"], ["id", 7], ["LIMIT", 1]]
Completed 200 OK in 124ms (Views: 0.2ms | ActiveRecord: 8.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:41:59 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.0ms)
Completed 200 OK in 35ms (Views: 31.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:41:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 124ms (Views: 13.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:00 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:15 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhat214\\\",\\\"email\\\":\\\"haha3334@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3334@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha3334@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 125ms (Views: 0.3ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:19 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tuser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnhdasdat214"], ["password_digest", "$2a$10$k0jDGcGo4g.KijJVa5DYIOvL8pIPrO.SXO29CIHalVO9B6EZpdWam"], ["created_at", "2018-06-12 04:42:19.720625"], ["updated_at", "2018-06-12 04:42:19.720625"], ["email", "haha33dadd34@gmail.com"]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhdasdat214"], ["id", 8], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "haha33dadd34@gmail.com"], ["id", 8], ["LIMIT", 1]]
Completed 200 OK in 102ms (Views: 0.2ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnhdasdat214\\\",\\\"email\\\":\\\"haha33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnhdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "haha33dadd34@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 141ms (Views: 0.3ms | ActiveRecord: 6.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:42:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdasdat214\\\",\\\"email\\\":\\\"hahass33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdasdat214\\\",\\\"email\\\":\\\"hahass33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tconcho {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahass33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnddahdasdat214"], ["password_digest", "$2a$10$dZCn5/5TSDdWTQUg6/w3ueYspPr1tsKKkEz3aA8hoJLMKdGpmllM2"], ["created_at", "2018-06-12 04:42:53.272337"], ["updated_at", "2018-06-12 04:42:53.272337"], ["email", "hahass33dadd34@gmail.com"]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnddahdasdat214"], ["id", 9], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "hahass33dadd34@gmail.com"], ["id", 9], ["LIMIT", 1]]
Completed 200 OK in 105ms (Views: 0.3ms | ActiveRecord: 4.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:43:17 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (31.8ms)
Completed 200 OK in 51ms (Views: 43.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:43:18 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 157ms (Views: 21.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:43:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdddasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahasssss33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "quangnddahdddasdat214"], ["password_digest", "$2a$10$k8yUlfTvGb6O9Ee8fv4Pt.TQEKbBp2Ygwuwrf9YbAOkFHFtb10Jv2"], ["created_at", "2018-06-12 04:43:26.610446"], ["updated_at", "2018-06-12 04:43:26.610446"], ["email", "hahasssss33dadd34@gmail.com"]]
  [1m[35m (4.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnddahdddasdat214"], ["id", 10], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "hahasssss33dadd34@gmail.com"], ["id", 10], ["LIMIT", 1]]
Completed 200 OK in 124ms (Views: 0.2ms | ActiveRecord: 12.2ms)
Started GET "/" for 127.0.0.1 at 2018-06-12 09:22:01 +0700
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Rails::WelcomeController#index as HTML
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (3.5ms)
Completed 200 OK in 14ms (Views: 7.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 09:22:03 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/peter/.rvm/gems/ruby-2.5.0/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (273.1ms)
Completed 200 OK in 284ms (Views: 275.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:22:04 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 76ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:22:07 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  users(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  users(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:23:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (4.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 42ms (Views: 0.3ms | ActiveRecord: 11.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:23:28 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.3ms)


  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "projects" ("name", "description", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "Test"], ["description", "ABC"], ["created_at", "2018-06-12 02:29:38.251758"], ["updated_at", "2018-06-12 02:29:38.251758"]]
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:31:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user() {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user() {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/peter/rails/emt/api-emt/app/graphql/types/query_type.rb:13: syntax error, unexpected ':', expecting keyword_end
    argument: id, ID, required: false
            ^
/home/peter/rails/emt/api-emt/app/graphql/types/query_type.rb:13: syntax error, unexpected tLABEL, expecting '='
    argument: id, ID, required: false
                      ^~~~~~~~~
/home/peter/rails/emt/api-emt/app/graphql/types/query_type.rb:18: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/query_type.rb:13: syntax error, unexpected ':', expecting keyword_end
app/graphql/types/query_type.rb:13: syntax error, unexpected tLABEL, expecting '='
app/graphql/types/query_type.rb:18: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/enhance_url_tagging_schema.rb:3:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:31:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user() {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user() {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 32ms (ActiveRecord: 0.0ms)


  
ArgumentError (missing keyword: id):
  
app/graphql/types/query_type.rb:8:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:32:36 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:) {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:) {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", nil], ["LIMIT", 1]]
Completed 404 Not Found in 19ms (ActiveRecord: 4.4ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=):
  
app/graphql/types/query_type.rb:9:in `user'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:32:39 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id: 1) {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id: 1) {\n    id\n    createdAt\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 26ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 09:33:10 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  project(id: 1) {\n    id\n    name\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  project(id: 1) {\n    id\n    name\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProject Load (1.1ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 71ms (Views: 0.2ms | ActiveRecord: 16.6ms)


  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (2.2ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "Dimension1"], ["category", "Cat1"], ["project_id", 1], ["created_at", "2018-06-12 03:04:05.630317"], ["updated_at", "2018-06-12 03:04:05.630317"]]
  [1m[35m (7.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDimension Load (0.9ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" ORDER BY "dimensions"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (0.8ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" ORDER BY "dimensions"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (1.1ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" ORDER BY "dimensions"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProject Load (0.9ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mDimension Load (0.7ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 11]]
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:07:38 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 29ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:09:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  project(id: 1) {\n    id\n    name\n    \n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  project(id: 1) {\n    id\n    name\n    \n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 46ms (Views: 0.5ms | ActiveRecord: 8.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:09:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:10:15 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions {\n      name\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions {\n      name\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.5ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
Completed 200 OK in 56ms (Views: 0.2ms | ActiveRecord: 4.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:10:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions {\n      \n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions {\n      \n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:10:30 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions {\n      name\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  project(id: 1) {\n    id\n    name\n    dimensions {\n      name\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.8ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
Completed 200 OK in 16ms (Views: 0.7ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 10:15:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  dimension(id: 1) {\n    id\n    name\n    project {\n      name\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  dimension(id: 1) {\n    id\n    name\n    project {\n      name\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mDimension Load (0.6ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 98ms (Views: 0.4ms | ActiveRecord: 15.2ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 11:59:39 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (263.7ms)
Completed 200 OK in 279ms (Views: 269.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 11:59:39 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 31ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::ProjectMemeber):
  
app/graphql/types/user.rb:12:in `<class:User>'
app/graphql/types/user.rb:1:in `<top (required)>'
app/graphql/mutations/login.rb:9:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 12:01:07 +0700
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (359.9ms)
Completed 200 OK in 378ms (Views: 367.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:01:08 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 38ms (ActiveRecord: 0.0ms)


  
ArgumentError (Failed to build return type for User.projects from [Types::Project, {:null=>false}]: Use an array of [T] or [T, null: true] for list types; other arrays are not supported):
  
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 12:03:15 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (8.7ms)
Completed 200 OK in 14ms (Views: 11.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:03:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 46ms (ActiveRecord: 0.0ms)


  
ArgumentError (Failed to build return type for User.projectRelationships from [Types::ProjectMember, {:null=>false}]: Use an array of [T] or [T, null: true] for list types; other arrays are not supported):
  
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:03:17 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
ArgumentError (Failed to build return type for User.projectRelationships from [Types::ProjectMember, {:null=>false}]: Use an array of [T] or [T, null: true] for list types; other arrays are not supported):
  
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 12:06:46 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (15.2ms)
Completed 200 OK in 19ms (Views: 17.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:06:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 20ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Project!' for Types:Module):
  
app/graphql/types/user.rb:11:in `<class:User>'
app/graphql/types/user.rb:1:in `<top (required)>'
app/graphql/mutations/login.rb:9:in `<class:Login>'
app/graphql/mutations/login.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:8:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:06:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/huyloc/code/rubyonrails/emt/api-emt/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 12:07:48 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (17.0ms)
Completed 200 OK in 23ms (Views: 19.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:07:48 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 44ms (ActiveRecord: 0.0ms)


  
ArgumentError (Failed to build return type for DimensionType.authorizations from [Types::Authorization, {:null=>false}]: Use an array of [T] or [T, null: true] for list types; other arrays are not supported):
  
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:07:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
ArgumentError (Failed to build return type for DimensionType.authorizations from [Types::Authorization, {:null=>false}]: Use an array of [T] or [T, null: true] for list types; other arrays are not supported):
  
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:10:12 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdddasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahasssss33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdddasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahasssss33dadd34@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 148ms (Views: 0.3ms | ActiveRecord: 6.8ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 12:10:16 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (9.6ms)
Completed 200 OK in 18ms (Views: 14.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:10:16 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 160ms (Views: 24.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:10:17 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createUser(input: {attributes: \"{\\\"username\\\":\\\"quangnddahdddasdat214\\\",\\\"email\\\":\\\"hahasssss33dadd34@gmail.com\\\",\\\"password\\\":\\\"quangnhat\\\"}\"}){\n  \tcreatedUser {\n      username\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdddasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahasssss33dadd34@gmail.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "quangnddahdddasdat214"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) LIMIT $2[0m  [["email", "hahasssss33dadd34@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 90ms (Views: 0.2ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:12:34 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:1)\n  {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:1)\n  {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (1.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 200 OK in 19ms (Views: 0.4ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:14:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      \n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      \n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (2.2ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 1]]
Completed 200 OK in 59ms (Views: 0.2ms | ActiveRecord: 5.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:16:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (1.5ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 1]]
  [1m[36mAuthorization Load (4.1ms)[0m  [1m[34mSELECT "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1[0m  [["project_member_id", 1]]
  [1m[36mDimension Load (1.7ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
Completed 200 OK in 75ms (Views: 0.4ms | ActiveRecord: 14.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:17:10 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n      }\n      project{\n        id\n        dimensions{\n          name\n          id\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n      }\n      project{\n        id\n        dimensions{\n          name\n          id\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1[0m  [["project_member_id", 1]]
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (1.1ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mProject Load (1.0ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
Completed 200 OK in 37ms (Views: 0.3ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:18:42 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n        optionAuthorizations{\n          option{\n            name\n            id\n          }\n        }\n      }\n      project{\n        id\n        dimensions{\n          name\n          id\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n        optionAuthorizations{\n          option{\n            name\n            id\n          }\n        }\n      }\n      project{\n        id\n        dimensions{\n          name\n          id\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.8ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1[0m  [["project_member_id", 1]]
  [1m[36mDimension Load (0.3ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOptionAuthorization Load (3.6ms)[0m  [1m[34mSELECT "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1[0m  [["authorization_id", 1]]
  [1m[36mOption Load (2.0ms)[0m  [1m[34mSELECT  "options".* FROM "options" WHERE "options"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.3ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mOptionAuthorization Load (0.3ms)[0m  [1m[34mSELECT "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1[0m  [["authorization_id", 3]]
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.2ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
Completed 200 OK in 85ms (Views: 1.2ms | ActiveRecord: 16.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:19:23 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n        optionAuthorizations{\n          option{\n            name\n            id\n          }\n        }\n      }\n      project{\n        id\n        dimensions{\n          name\n          id\n          options{\n            name\n          }\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n        optionAuthorizations{\n          option{\n            name\n            id\n          }\n        }\n      }\n      project{\n        id\n        dimensions{\n          name\n          id\n          options{\n            name\n          }\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 1]]
  [1m[36mAuthorization Load (0.6ms)[0m  [1m[34mSELECT "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1[0m  [["project_member_id", 1]]
  [1m[36mDimension Load (0.3ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOptionAuthorization Load (0.4ms)[0m  [1m[34mSELECT "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1[0m  [["authorization_id", 1]]
  [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT  "options".* FROM "options" WHERE "options"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.3ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mOptionAuthorization Load (0.5ms)[0m  [1m[34mSELECT "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1[0m  [["authorization_id", 3]]
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.7ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 1]]
  [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 3]]
Completed 200 OK in 44ms (Views: 0.4ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:20:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n        optionAuthorizations{\n          option{\n            name\n            id\n          }\n        }\n      }\n      project{\n        members{\n          id\n          username\n        }\n        id\n        dimensions{\n          name\n          id\n          options{\n            name\n          }\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  user(id:1)\n  {\n    id\n    projectRelationships{\n      id\n      authorizations{\n        id\n        dimension{\n          name\n          id\n        }\n        optionAuthorizations{\n          option{\n            name\n            id\n          }\n        }\n      }\n      project{\n        members{\n          id\n          username\n        }\n        id\n        dimensions{\n          name\n          id\n          options{\n            name\n          }\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.6ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1[0m  [["project_member_id", 1]]
  [1m[36mDimension Load (0.2ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOptionAuthorization Load (0.3ms)[0m  [1m[34mSELECT "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1[0m  [["authorization_id", 1]]
  [1m[36mOption Load (0.2ms)[0m  [1m[34mSELECT  "options".* FROM "options" WHERE "options"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.2ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[36mOptionAuthorization Load (0.4ms)[0m  [1m[34mSELECT "option_authorizations".* FROM "option_authorizations" WHERE "option_authorizations"."authorization_id" = $1[0m  [["authorization_id", 3]]
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mDimension Load (1.4ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 1]]
  [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 3]]
Completed 200 OK in 56ms (Views: 0.5ms | ActiveRecord: 5.7ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 12:26:45 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (12.1ms)
Completed 200 OK in 17ms (Views: 15.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:26:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 243ms (Views: 17.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:33:56 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":1,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":1,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "Sa"], ["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "abc@abc.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 69ms (ActiveRecord: 9.1ms)


  
NoMethodError (undefined method `valid?' for false:FalseClass):
  
app/graphql/mutations/update_user.rb:9:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:37:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":1,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":1,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.9ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "Sa"], ["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "abc@abc.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 81ms (ActiveRecord: 11.0ms)


  
NameError (undefined local variable or method `record' for #<Mutations::UpdateUser:0x00007f8ab891a6a0>):
  
app/graphql/mutations/update_user.rb:15:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 12:37:36 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (21.0ms)
Completed 200 OK in 28ms (Views: 24.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:37:37 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 223ms (Views: 45.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:37:38 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":1,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":1,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "Sa"], ["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (1.0ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "abc@abc.com"], ["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 50ms (Views: 0.8ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 12:37:56 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":2,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateUser (input: {\n    attributes: \"{\\\"id\\\":2,\\\"email\\\":\\\"abc@abc.com\\\"}\"\n  }) {\n    updatedUser {\n      email\n      username\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "quangnhat"], ["id", 2], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."email") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["email", "abc@abc.com"], ["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (5.3ms)[0m  [1m[33mUPDATE "users" SET "email" = $1, "updated_at" = $2 WHERE "users"."id" = $3[0m  [["email", "abc@abc.com"], ["updated_at", "2018-06-12 05:37:56.831677"], ["id", 2]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 200 OK in 36ms (Views: 1.0ms | ActiveRecord: 9.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 14:22:45 +0700
  [1m[35m (2.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (289.8ms)
Completed 200 OK in 309ms (Views: 298.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:22:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 237ms (Views: 13.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 14:23:25 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (14.3ms)
Completed 200 OK in 18ms (Views: 16.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:23:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 237ms (Views: 15.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:24:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProject(input: {attributes: \"{\\\"name\\\":\\\"project1\\\",\\\"description\\\":\\\"pdadda\\\"}\"}){\n    createdProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProject(input: {attributes: \"{\\\"name\\\":\\\"project1\\\",\\\"description\\\":\\\"pdadda\\\"}\"}){\n    createdProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Exists (3.0ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 LIMIT $2[0m  [["name", "project1"], ["LIMIT", 1]]
  [1m[35mSQL (2.9ms)[0m  [1m[32mINSERT INTO "projects" ("name", "description", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "project1"], ["description", "pdadda"], ["created_at", "2018-06-12 07:24:26.233857"], ["updated_at", "2018-06-12 07:24:26.233857"]]
  [1m[35m (3.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mProject Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 AND ("projects"."id" != $2) LIMIT $3[0m  [["name", "project1"], ["id", 2], ["LIMIT", 1]]
Completed 200 OK in 62ms (Views: 0.2ms | ActiveRecord: 17.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:24:32 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProject(input: {attributes: \"{\\\"name\\\":\\\"pr\\\",\\\"description\\\":\\\"pdadda\\\"}\"}){\n    createdProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProject(input: {attributes: \"{\\\"name\\\":\\\"pr\\\",\\\"description\\\":\\\"pdadda\\\"}\"}){\n    createdProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 LIMIT $2[0m  [["name", "pr"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mProject Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 LIMIT $2[0m  [["name", "pr"], ["LIMIT", 1]]
Completed 200 OK in 29ms (Views: 0.4ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:24:38 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProject(input: {attributes: \"{\\\"name\\\":\\\"pr\\\",\\\"description\\\":\\\"dda\\\"}\"}){\n    createdProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProject(input: {attributes: \"{\\\"name\\\":\\\"pr\\\",\\\"description\\\":\\\"dda\\\"}\"}){\n    createdProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 LIMIT $2[0m  [["name", "pr"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mProject Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 LIMIT $2[0m  [["name", "pr"], ["LIMIT", 1]]
Completed 200 OK in 21ms (Views: 0.4ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:25:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateProject(input: {attributes: \"{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"pr\\\",\\\"description\\\":\\\"dda\\\"}\"}){\n    updatedProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateProject(input: {attributes: \"{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"pr\\\",\\\"description\\\":\\\"dda\\\"}\"}){\n    updatedProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 AND ("projects"."id" != $2) LIMIT $3[0m  [["name", "pr"], ["id", 2], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 98ms (Views: 0.3ms | ActiveRecord: 5.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:26:01 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateProject(input: {attributes: \"{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"prsssss\\\",\\\"description\\\":\\\"dda\\\"}\"}){\n    updatedProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateProject(input: {attributes: \"{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"prsssss\\\",\\\"description\\\":\\\"dda\\\"}\"}){\n    updatedProject{\n      name\n      description\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mProject Load (0.6ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "projects" WHERE "projects"."name" = $1 AND ("projects"."id" != $2) LIMIT $3[0m  [["name", "prsssss"], ["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (2.8ms)[0m  [1m[33mUPDATE "projects" SET "name" = $1, "description" = $2, "updated_at" = $3 WHERE "projects"."id" = $4[0m  [["name", "prsssss"], ["description", "dda"], ["updated_at", "2018-06-12 07:26:01.650113"], ["id", 2]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
Completed 200 OK in 24ms (Views: 0.2ms | ActiveRecord: 5.8ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 14:50:05 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (31.8ms)
Completed 200 OK in 38ms (Views: 34.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:50:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 238ms (Views: 17.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:51:17 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}){\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}){\n    \n  }\n}", "variables"=>nil}}
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:51:30 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (3.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 200 OK in 52ms (Views: 0.5ms | ActiveRecord: 11.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 14:52:45 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (27.4ms)
Completed 200 OK in 32ms (Views: 30.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:52:45 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 260ms (Views: 15.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:52:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
Completed 500 Internal Server Error in 86ms (ActiveRecord: 9.4ms)


  
ActiveModel::UnknownAttributeError (unknown attribute 'role' for ProjectMember.):
  
app/graphql/mutations/add_member_to_project.rb:12:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
  [1m[35m (0.5ms)[0m  [1m[34mSELECT pg_try_advisory_lock(2600513041233280215)[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddRoleToProjectMember (20180612075500)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (10.7ms)[0m  [1m[35mALTER TABLE "project_members" ADD "role" character varying[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180612075500"]]
  [1m[35m (1.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(2600513041233280215)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 14:58:20 +0700
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (312.7ms)
Completed 200 OK in 337ms (Views: 322.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:58:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 270ms (Views: 16.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 14:58:22 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (7.0ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id", "role") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", "2018-06-12 07:58:23.073911"], ["updated_at", "2018-06-12 07:58:23.073911"], ["user_id", 2], ["project_id", 1], ["role", "admin"]]
  [1m[35mSQL (1.2ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
Completed 500 Internal Server Error in 125ms (ActiveRecord: 29.4ms)


  
ActiveModel::MissingAttributeError (can't write unknown attribute `client_mutation_id`):
  
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:00:22 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    \n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    \n  }\n}", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:00:33 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.6ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (2.6ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id", "role") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", "2018-06-12 08:00:33.077224"], ["updated_at", "2018-06-12 08:00:33.077224"], ["user_id", 2], ["project_id", 1], ["role", "admin"]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 22ms (ActiveRecord: 4.7ms)


  
ActiveRecord::RecordNotUnique (PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "project member index"
DETAIL:  Key (user_id, project_id)=(2, 1) already exists.
: INSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id", "role") VALUES ($1, $2, $3, $4, $5) RETURNING "id"):
  
app/graphql/mutations/add_member_to_project.rb:12:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:01:05 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.6ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id", "role") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", "2018-06-12 08:01:05.199360"], ["updated_at", "2018-06-12 08:01:05.199360"], ["user_id", 2], ["project_id", 1], ["role", "admin"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 16ms (ActiveRecord: 3.0ms)


  
ActiveRecord::RecordNotUnique (PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "project member index"
DETAIL:  Key (user_id, project_id)=(2, 1) already exists.
: INSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id", "role") VALUES ($1, $2, $3, $4, $5) RETURNING "id"):
  
app/graphql/mutations/add_member_to_project.rb:12:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1 LIMIT $2[0m  [["user_id", 1], ["LIMIT", 11]]
  [1m[36mProjectMember Load (1.2ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 1]]
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 15:14:40 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (11.9ms)
Completed 200 OK in 21ms (Views: 16.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:14:41 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 234ms (Views: 29.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:14:43 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:1 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.8ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
Completed 200 OK in 72ms (Views: 0.3ms | ActiveRecord: 11.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:14:56 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:2 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:2 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "project_members" ("created_at", "updated_at", "user_id", "project_id", "role") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", "2018-06-12 08:14:56.782573"], ["updated_at", "2018-06-12 08:14:56.782573"], ["user_id", 2], ["project_id", 2], ["role", "admin"]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "projects" SET "member_count" = COALESCE("member_count", 0) + 1 WHERE "projects"."id" = $1[0m  [["id", 2]]
  [1m[35m (6.1ms)[0m  [1m[35mCOMMIT[0m
Completed 500 Internal Server Error in 49ms (ActiveRecord: 13.0ms)


  
ActiveModel::MissingAttributeError (can't write unknown attribute `client_mutation_id`):
  
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:18:23 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 27ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::AddMemberToProject::Bool):
  
app/graphql/mutations/add_member_to_project.rb:7:in `<class:AddMemberToProject>'
app/graphql/mutations/add_member_to_project.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:13:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:19:05 +0700
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 44ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::AddMemberToProject::Bool):
  
app/graphql/mutations/add_member_to_project.rb:7:in `<class:AddMemberToProject>'
app/graphql/mutations/add_member_to_project.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:13:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 15:19:27 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (296.4ms)
Completed 200 OK in 300ms (Views: 298.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:19:28 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 258ms (Views: 18.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:19:29 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    clientMutationId\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.6ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 115ms (Views: 0.4ms | ActiveRecord: 13.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:19:43 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.6ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 19ms (Views: 0.3ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:19:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.4ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:19:48 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.2ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:20:42 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.4ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 143ms (Views: 0.7ms | ActiveRecord: 14.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:21:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quandfdagnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quandfdagnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quandfdagnhat"], ["LIMIT", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "quandfdagnhat"], ["LIMIT", 1]]
Completed 200 OK in 13ms (Views: 0.5ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:08 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 23ms (Views: 0.4ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:12 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 13ms (Views: 0.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.7ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 23ms (Views: 0.5ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 25ms (Views: 0.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 14ms (Views: 1.2ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.6ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 22ms (Views: 0.8ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.2ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.8ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 24ms (Views: 0.4ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.7ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 24ms (Views: 0.4ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:3 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.6ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.6ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 26ms (Views: 0.7ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:22:17 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:2 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  addMemberToProject(input:{username:\"quangnhat\",projectId:2 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 LIMIT $2[0m  [["username", "quangnhat"], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.6ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."user_id" = $1[0m  [["user_id", 2]]
Completed 200 OK in 18ms (Views: 0.6ms | ActiveRecord: 1.2ms)


  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" ORDER BY "projects"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:38:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 43ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::UpdateMembeRoleInProject):
  
app/graphql/types/mutation_type.rb:14:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 15:38:25 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (41.8ms)
Completed 200 OK in 49ms (Views: 46.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:38:25 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 46ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Mutations::UpdateMemberRoleInProject, expected /home/huyloc/code/rubyonrails/emt/api-emt/app/graphql/mutations/update_member_role_in_project.rb to define it):
  
app/graphql/types/mutation_type.rb:14:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:38:26 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/huyloc/code/rubyonrails/emt/api-emt/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 15:38:49 +0700
  [1m[35m (1.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (340.1ms)
Completed 200 OK in 366ms (Views: 347.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:38:50 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 56ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Mutations::UpdateMemberRoleInProject, expected /home/huyloc/code/rubyonrails/emt/api-emt/app/graphql/mutations/update_member_role_in_project.rb to define it):
  
app/graphql/types/mutation_type.rb:14:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:38:52 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /home/huyloc/code/rubyonrails/emt/api-emt/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:39:23 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
Completed 200 OK in 58ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 15:39:27 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (16.6ms)
Completed 200 OK in 30ms (Views: 24.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:39:27 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 265ms (Views: 24.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:39:28 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{project_member_id:1 , role:\"admin\"}) {\n    added\n  }\n}", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:40:19 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{projectMemberId: 1, role:\"admin\"}) {\n    updated\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{projectMemberId: 1, role:\"admin\"}) {\n    updated\n  }\n}", "variables"=>nil}}
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 41ms (ActiveRecord: 4.0ms)


  
ArgumentError (wrong number of arguments (given 1, expected 2)):
  
app/graphql/mutations/update_member_role_in_project.rb:10:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:41:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{projectMemberId: 1, role:\"admin\"}) {\n    updated\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{projectMemberId: 1, role:\"admin\"}) {\n    updated\n  }\n}", "variables"=>nil}}
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (2.1ms)[0m  [1m[33mUPDATE "project_members" SET "role" = $1, "updated_at" = $2 WHERE "project_members"."id" = $3[0m  [["role", "admin"], ["updated_at", "2018-06-12 08:41:20.873045"], ["id", 1]]
  [1m[35m (1.6ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 150ms (Views: 0.3ms | ActiveRecord: 18.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:41:39 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  updateMemberRoleInProject(input:{projectMemberId: 1, role:\"peasant\"}) {\n    updated\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  updateMemberRoleInProject(input:{projectMemberId: 1, role:\"peasant\"}) {\n    updated\n  }\n}", "variables"=>nil}}
  [1m[36mProjectMember Load (0.8ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" WHERE "project_members"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "project_members" SET "role" = $1, "updated_at" = $2 WHERE "project_members"."id" = $3[0m  [["role", "peasant"], ["updated_at", "2018-06-12 08:41:39.396556"], ["id", 1]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 31ms (Views: 0.2ms | ActiveRecord: 5.7ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 15:59:01 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (20.3ms)
Completed 200 OK in 29ms (Views: 23.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:59:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 300ms (Views: 15.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:59:49 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"quang\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"quang\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::User):
  
app/graphql/types/query_type.rb:59:in `member_suggestion'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 15:59:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"quang\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"quang\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (4.8ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%quang%' OR email LIKE '%quang%')[0m
Completed 200 OK in 112ms (Views: 1.3ms | ActiveRecord: 14.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:00:12 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"a\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"a\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%a%' OR email LIKE '%a%')[0m
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:00:48 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"a\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"a\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%a%' OR email LIKE '%a%')[0m
Completed 200 OK in 96ms (Views: 1.6ms | ActiveRecord: 7.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:01:09 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"p\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"p\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%p%' OR email LIKE '%p%')[0m
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:01:20 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"q\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"q\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%q%' OR email LIKE '%q%')[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:01:27 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"3\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"3\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%3%' OR email LIKE '%3%')[0m
Completed 200 OK in 12ms (Views: 0.6ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:01:41 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"35\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"35\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%35%' OR email LIKE '%35%')[0m
Completed 200 OK in 11ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:01:46 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"344\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"344\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (1.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%344%' OR email LIKE '%344%')[0m
Completed 200 OK in 14ms (Views: 0.4ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:01:50 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  memberSuggestion (query: \"34\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  memberSuggestion (query: \"34\") {\n    username\n    email\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username LIKE '%34%' OR email LIKE '%34%')[0m
Completed 200 OK in 20ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 16:16:13 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.9ms)
Completed 200 OK in 28ms (Views: 22.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:16:14 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 235ms (Views: 35.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 16:16:55 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (15.8ms)
Completed 200 OK in 21ms (Views: 19.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:16:56 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 302ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:19:40 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attribute: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attribute: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:19:52 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (4.6ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "Dimension1"], ["category", "option"], ["project_id", 1], ["created_at", "2018-06-12 09:19:52.348616"], ["updated_at", "2018-06-12 09:19:52.348616"]]
  [1m[35m (3.3ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 65ms (Views: 0.3ms | ActiveRecord: 23.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:19:55 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (4.4ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "Dimension1"], ["category", "option"], ["project_id", 1], ["created_at", "2018-06-12 09:19:55.998021"], ["updated_at", "2018-06-12 09:19:55.998021"]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 17ms (ActiveRecord: 5.4ms)


  
ActiveRecord::RecordNotUnique (PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "dimention_name"
DETAIL:  Key (name, project_id)=(Dimension1, 1) already exists.
: INSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"):
  
app/graphql/mutations/create_dimension.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 16:24:58 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (28.1ms)
Completed 200 OK in 33ms (Views: 31.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:24:58 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 231ms (Views: 17.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:24:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Exists (3.2ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 LIMIT $2[0m  [["name", "Dimension1"], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 LIMIT $2[0m  [["name", "Dimension1"], ["LIMIT", 1]]
  [1m[36mDimension Exists (2.1ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 1], ["LIMIT", 1]]
Completed 200 OK in 83ms (Views: 0.4ms | ActiveRecord: 14.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:25:11 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.7ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 LIMIT $2[0m  [["name", "Dimension1"], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 2], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 LIMIT $2[0m  [["name", "Dimension1"], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."project_id" = $1 LIMIT $2[0m  [["project_id", 2], ["LIMIT", 1]]
Completed 200 OK in 20ms (Views: 0.4ms | ActiveRecord: 3.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 16:25:32 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (26.8ms)
Completed 200 OK in 32ms (Views: 31.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:25:33 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 253ms (Views: 18.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:25:35 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `to_sym' for [:name, :project_id]:Array
Did you mean?  to_s
               to_set):
  
app/models/dimension.rb:6:in `<class:Dimension>'
app/models/dimension.rb:1:in `<top (required)>'
app/graphql/mutations/create_dimension.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 16:25:51 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (17.4ms)
Completed 200 OK in 21ms (Views: 20.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:25:51 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 290ms (Views: 19.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:25:52 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/home/huyloc/code/rubyonrails/emt/api-emt/app/models/dimension.rb:6: syntax error, unexpected ',', expecting '}'
    validates {:name, :project_id}, uniqueness: tru
                     ^):
  
app/models/dimension.rb:6: syntax error, unexpected ',', expecting '}'
app/graphql/mutations/create_dimension.rb:8:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:29:40 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension1"], ["project_id", 2], ["LIMIT", 1]]
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "Dimension1"], ["category", "option"], ["project_id", 2], ["created_at", "2018-06-12 09:29:41.010435"], ["updated_at", "2018-06-12 09:29:41.010435"]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDimension Exists (1.1ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND ("dimensions"."id" != $2) AND "dimensions"."project_id" = $3 LIMIT $4[0m  [["name", "Dimension1"], ["id", 6], ["project_id", 2], ["LIMIT", 1]]
Completed 200 OK in 133ms (Views: 0.6ms | ActiveRecord: 15.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:29:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":2}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.6ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension1"], ["project_id", 2], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension1"], ["project_id", 2], ["LIMIT", 1]]
Completed 200 OK in 21ms (Views: 0.7ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:29:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension1\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.7ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension1"], ["project_id", 1], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension1"], ["project_id", 1], ["LIMIT", 1]]
Completed 200 OK in 22ms (Views: 0.4ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:30:07 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension2\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension2\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.7ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension2"], ["project_id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "dimensions" ("name", "category", "project_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["name", "Dimension2"], ["category", "option"], ["project_id", 1], ["created_at", "2018-06-12 09:30:07.552472"], ["updated_at", "2018-06-12 09:30:07.552472"]]
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mDimension Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND ("dimensions"."id" != $2) AND "dimensions"."project_id" = $3 LIMIT $4[0m  [["name", "Dimension2"], ["id", 7], ["project_id", 1], ["LIMIT", 1]]
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:30:08 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension2\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension2\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.7ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension2"], ["project_id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."name" = $1 AND "dimensions"."project_id" = $2 LIMIT $3[0m  [["name", "Dimension2"], ["project_id", 1], ["LIMIT", 1]]
Completed 200 OK in 36ms (Views: 0.4ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:31:37 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension2\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createDimension(input: {\n    attributes: \"{\\\"name\\\":\\\"Dimension2\\\",\\\"category\\\":\\\"option\\\",\\\"project_id\\\":1}\"\n  }) {\n    createdDimension {\n      name\n      id\n    }\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."project_id" = $1 AND "dimensions"."name" = $2 LIMIT $3[0m  [["project_id", 1], ["name", "Dimension2"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mDimension Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "dimensions" WHERE "dimensions"."project_id" = $1 AND "dimensions"."name" = $2 LIMIT $3[0m  [["project_id", 1], ["name", "Dimension2"], ["LIMIT", 1]]
Completed 200 OK in 108ms (Views: 0.8ms | ActiveRecord: 8.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-12 16:48:52 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (14.3ms)
Completed 200 OK in 23ms (Views: 18.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:48:53 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 247ms (Views: 17.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:50:11 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createOption (input: {\n    names: [\"FB\",\"GG\",\"YT\",\"FB\",\"UBer\"], dimensionId: 1\n  }) {\n    createdOptions\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createOption (input: {\n    names: [\"FB\",\"GG\",\"YT\",\"FB\",\"UBer\"], dimensionId: 1\n  }) {\n    createdOptions\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (0.7ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (1.3ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "FB"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35mSQL (2.6ms)[0m  [1m[32mINSERT INTO "options" ("name", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "FB"], ["dimension_id", 1], ["created_at", "2018-06-12 09:50:11.461479"], ["updated_at", "2018-06-12 09:50:11.461479"]]
  [1m[35m (3.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (1.0ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "GG"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "options" ("name", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "GG"], ["dimension_id", 1], ["created_at", "2018-06-12 09:50:11.479536"], ["updated_at", "2018-06-12 09:50:11.479536"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (0.8ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (1.3ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "YT"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("name", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "YT"], ["dimension_id", 1], ["created_at", "2018-06-12 09:50:11.493488"], ["updated_at", "2018-06-12 09:50:11.493488"]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (0.2ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "FB"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35m (1.0ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (1.3ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "UBer"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "options" ("name", "dimension_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["name", "UBer"], ["dimension_id", 1], ["created_at", "2018-06-12 09:50:11.510168"], ["updated_at", "2018-06-12 09:50:11.510168"]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 111ms (Views: 0.5ms | ActiveRecord: 33.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:51:02 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createOption (input: {\n    names: [\"FB\",\"GG\",\"YT\",\"FB\",\"UBer\"], dimensionId: 1\n  }) {\n    createdOptions\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createOption (input: {\n    names: [\"FB\",\"GG\",\"YT\",\"FB\",\"UBer\"], dimensionId: 1\n  }) {\n    createdOptions\n  }\n}", "variables"=>nil}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (0.3ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "FB"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
Completed 500 Internal Server Error in 105ms (ActiveRecord: 12.5ms)


  
ActiveRecord::RecordInvalid (Validation failed: Name has already been taken):
  
app/graphql/mutations/create_option.rb:11:in `block in resolve'
app/graphql/mutations/create_option.rb:9:in `each'
app/graphql/mutations/create_option.rb:9:in `resolve'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-12 16:54:32 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createOption (input: {\n    names: [\"FB\",\"GG\",\"YT\",\"FB\",\"UBer\"], dimensionId: 1\n  }) {\n    createdOptions\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createOption (input: {\n    names: [\"FB\",\"GG\",\"YT\",\"FB\",\"UBer\"], dimensionId: 1\n  }) {\n    createdOptions\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (0.2ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "FB"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "GG"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (1.9ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.9ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "YT"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "FB"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mDimension Load (1.7ms)[0m  [1m[34mSELECT  "dimensions".* FROM "dimensions" WHERE "dimensions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mOption Exists (1.4ms)[0m  [1m[34mSELECT  1 AS one FROM "options" WHERE "options"."name" = $1 AND "options"."dimension_id" = $2 LIMIT $3[0m  [["name", "UBer"], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
Completed 200 OK in 147ms (Views: 0.3ms | ActiveRecord: 15.3ms)


Started GET "/" for 127.0.0.1 at 2018-06-13 11:48:58 +0700
  [1m[35m (3.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Rails::WelcomeController#index as HTML
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (2.6ms)
Completed 200 OK in 22ms (Views: 8.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 11:49:02 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (376.3ms)
Completed 200 OK in 383ms (Views: 379.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 11:49:03 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 314ms (Views: 29.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 11:49:59 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  projectMembers(projectId:1){\n    id\n    email\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  projectMembers(projectId:1){\n    id\n    email\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 9ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 11:50:22 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  projectMembers(projectId:1){\n    id\n    email\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  projectMembers(projectId:1){\n    id\n    email\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProject Load (1.8ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (4.1ms)[0m  [1m[34mSELECT "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
Completed 200 OK in 166ms (Views: 0.3ms | ActiveRecord: 19.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 11:50:41 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  projectMembers(projectId:1){\n    id\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  projectMembers(projectId:1){\n    id\n    username\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProject Load (0.9ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
Completed 200 OK in 20ms (Views: 0.6ms | ActiveRecord: 1.9ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 11:53:39 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (27.9ms)
Completed 200 OK in 34ms (Views: 32.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 11:53:40 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 223ms (Views: 15.5ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 11:58:03 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (17.2ms)
Completed 200 OK in 22ms (Views: 20.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 11:58:03 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 276ms (Views: 31.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 11:58:30 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  projectDimensions(projectId: 1){\n    id\n    options {\n      name\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  projectDimensions(projectId: 1){\n    id\n    options {\n      name\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (3.3ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mOption Load (2.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 1]]
  [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 3]]
  [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 4]]
  [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."dimension_id" = $1[0m  [["dimension_id", 7]]
Completed 200 OK in 112ms (Views: 1.4ms | ActiveRecord: 22.7ms)


  [1m[36mProject Load (1.7ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (1.9ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (2.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.4ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.8ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (1.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.5ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mProjectMember Load (2.2ms)[0m  [1m[34mSELECT  "project_members".* FROM "project_members" ORDER BY "project_members"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mAuthorization Load (2.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 LIMIT $2[0m  [["project_member_id", 1], ["LIMIT", 11]]
  [1m[36mAuthorization Load (0.8ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["id", nil], ["LIMIT", 1]]
  [1m[36mAuthorization Load (1.0ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 13], ["LIMIT", 1]]
  [1m[36mAuthorization Load (1.1ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 13], ["LIMIT", 1]]
  [1m[36mAuthorization Load (1.1ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.4ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (2.3ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mAuthorization Load (0.5ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 7], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.5ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.6ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 7], ["LIMIT", 1]]
  [1m[36mProject Load (0.6ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.4ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (1.3ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 7], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.1ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.1ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 7], ["LIMIT", 1]]
  [1m[36mProject Load (1.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (1.0ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.7ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mAuthorization Load (0.8ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 7], ["LIMIT", 1]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.1ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 7], ["LIMIT", 1]]
Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 15:29:20 +0700
  [1m[35m (2.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (282.7ms)
Completed 200 OK in 299ms (Views: 288.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:29:21 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 48ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `truerp' for Mutations::CreateProject:Class):
  
app/graphql/mutations/create_project.rb:5:in `<class:CreateProject>'
app/graphql/mutations/create_project.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:11:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 15:30:04 +0700
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (247.2ms)
Completed 200 OK in 261ms (Views: 251.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:30:04 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 251ms (Views: 18.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:30:32 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  dimensionsAssignment(projectId: 1)\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  dimensionsAssignment(projectId: 1)\n}", "variables"=>nil}}
  [1m[36mProject Load (0.3ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.6ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mAuthorization Load (0.5ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (1.4ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 7], ["LIMIT", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.8ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.7ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 7], ["LIMIT", 1]]
Completed 200 OK in 165ms (Views: 0.2ms | ActiveRecord: 24.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:31:13 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  dimensionsAssignment(projectId: 1)\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  dimensionsAssignment(projectId: 1)\n}", "variables"=>nil}}
  [1m[36mProject Load (0.4ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mProjectMember Load (0.3ms)[0m  [1m[34mSELECT "project_members".* FROM "project_members" WHERE "project_members"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mDimension Load (0.4ms)[0m  [1m[34mSELECT "dimensions".* FROM "dimensions" WHERE "dimensions"."project_id" = $1[0m  [["project_id", 1]]
  [1m[36mAuthorization Load (0.9ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (1.0ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 1], ["dimension_id", 7], ["LIMIT", 1]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[36mAuthorization Load (1.2ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 1], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.4ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 3], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.5ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 4], ["LIMIT", 1]]
  [1m[36mAuthorization Load (0.3ms)[0m  [1m[34mSELECT  "authorizations".* FROM "authorizations" WHERE "authorizations"."project_member_id" = $1 AND "authorizations"."dimension_id" = $2 LIMIT $3[0m  [["project_member_id", 2], ["dimension_id", 7], ["LIMIT", 1]]
Completed 200 OK in 165ms (Views: 0.2ms | ActiveRecord: 22.9ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 15:57:50 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (19.6ms)
Completed 200 OK in 36ms (Views: 27.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:57:51 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 223ms (Views: 21.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:58:27 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"s\"){\n    username,\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"s\"){\n    username,\n    id\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::QueryType::Project):
  
app/graphql/types/query_type.rb:67:in `member_suggestion'
app/controllers/graphql_controller.rb:9:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:58:47 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"s\"){\n    username,\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"s\"){\n    username,\n    id\n  }\n}", "variables"=>nil}}
  [1m[36mProject Load (2.6ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (7.0ms)[0m  [1m[34mSELECT "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1 AND (username LIKE '%s%' OR email LIKE '%s%')[0m  [["project_id", 1]]
Completed 200 OK in 154ms (Views: 0.3ms | ActiveRecord: 48.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:58:52 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"quang\"){\n    username,\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"quang\"){\n    username,\n    id\n  }\n}", "variables"=>nil}}
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1 AND (username LIKE '%quang%' OR email LIKE '%quang%')[0m  [["project_id", 1]]
Completed 200 OK in 22ms (Views: 0.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 15:59:15 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"S\"){\n    username,\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query {\n  memberSuggestion(projectId: 1, query: \"S\"){\n    username,\n    id\n  }\n}", "variables"=>nil}}
  [1m[36mProject Load (0.5ms)[0m  [1m[34mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users" INNER JOIN "project_members" ON "users"."id" = "project_members"."user_id" WHERE "project_members"."project_id" = $1 AND (username LIKE '%S%' OR email LIKE '%S%')[0m  [["project_id", 1]]
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 1.5ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 16:28:27 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (174.7ms)
Completed 200 OK in 255ms (Views: 208.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 16:28:29 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 561ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Mutations::AssignDimensionsForMembers):
  
app/graphql/types/mutation_type.rb:18:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:1:in `<top (required)>'
app/graphql/enhance_url_tagging_schema.rb:2:in `<class:EnhanceUrlTaggingSchema>'
app/graphql/enhance_url_tagging_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:9:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-06-13 16:28:56 +0700
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /home/huyloc/.rvm/gems/ruby-2.4.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (89.2ms)
Completed 200 OK in 105ms (Views: 101.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-06-13 16:28:57 +0700
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 467ms (Views: 55.9ms | ActiveRecord: 0.0ms)



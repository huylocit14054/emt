{"version":3,"file":"4.4c66e969458f4edbf4ca.hot-update.js","sources":["webpack:///components/projects/projectsList.js","webpack:///./node_modules/truncate/truncate.js"],"sourcesContent":["import { List, Card, Avatar, Divider, Icon, Button } from \"antd\";\nimport { Query } from \"react-apollo\";\nimport { getProjectOfCurrentUser as GET_PROJECTS_OF_CURRENT_USER } from \"../../graphql/queries.gql\";\ntruncate = require(\"truncate\");\nconst addNewProject = [\n  {\n    title: \"Add new project\"\n  }\n];\nclass ProjectsList extends React.Component {\n  render() {\n    return (\n      <div className=\"projects-list\">\n        <List\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 4,\n            lg: 4,\n            xl: 6,\n            xxl: 3\n          }}\n          dataSource={addNewProject}\n          renderItem={item => (\n            <List.Item>\n              <Card className=\"add-project-btn\">\n                <b>\n                  <Icon type=\"plus\" /> {item.title}\n                </b>\n              </Card>\n            </List.Item>\n          )}\n        />\n        <Query query={GET_PROJECTS_OF_CURRENT_USER}>\n          {({ loading, error, data }) => {\n            if (loading) return \"Loading...\";\n            if (error) return `Error! ${error.message}`;\n            const {\n              projectsAsAdminOfCurrentUser,\n              projectsAsMemberOfCurrentUser\n            } = data;\n            return (\n              <div>\n                {projectsAsAdminOfCurrentUser.length > 0 && (\n                  <React.Fragment>\n                    <Divider orientation=\"left\">\n                      <Icon type=\"solution\" style={{ marginRight: 8 }} />As\n                      Admin\n                    </Divider>\n                    <List\n                      grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 6,\n                        xxl: 3\n                      }}\n                      dataSource={projectsAsAdminOfCurrentUser}\n                      renderItem={project => (\n                        <List.Item>\n                          <Card>\n                            <h2>\n                              <b>{project.name}</b>\n                            </h2>\n                            <p>{truncate(project.description, 4)}</p>\n                            <div>\n                              <Avatar icon=\"user\" />\n                              <Avatar>U</Avatar>\n                              <Avatar>USER</Avatar>\n                              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                              <Avatar\n                                style={{\n                                  color: \"#f56a00\",\n                                  backgroundColor: \"#fde3cf\"\n                                }}\n                              >\n                                U\n                              </Avatar>\n                              <Avatar\n                                style={{ backgroundColor: \"#87d068\" }}\n                                icon=\"user\"\n                              />\n                            </div>\n                          </Card>\n                        </List.Item>\n                      )}\n                    />\n\n                    {projectsAsMemberOfCurrentUser.length > 0 && (\n                      <React.Fragment>\n                        <Divider orientation=\"left\">\n                          <Icon type=\"user\" style={{ marginRight: 8 }} />\n                          As Member\n                        </Divider>\n                        <List\n                          grid={{\n                            gutter: 16,\n                            xs: 1,\n                            sm: 2,\n                            md: 4,\n                            lg: 4,\n                            xl: 6,\n                            xxl: 3\n                          }}\n                          dataSource={projectsAsMemberOfCurrentUser}\n                          renderItem={project => (\n                            <List.Item>\n                              <Card>\n                                <h2>\n                                  <b>{project.name}</b>\n                                </h2>\n                                <p>{project.description}</p>\n                                <div>\n                                  <Avatar icon=\"user\" />\n                                  <Avatar>U</Avatar>\n                                  <Avatar>USER</Avatar>\n                                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                                  <Avatar\n                                    style={{\n                                      color: \"#f56a00\",\n                                      backgroundColor: \"#fde3cf\"\n                                    }}\n                                  >\n                                    U\n                                  </Avatar>\n                                  <Avatar\n                                    style={{ backgroundColor: \"#87d068\" }}\n                                    icon=\"user\"\n                                  />\n                                </div>\n                              </Card>\n                            </List.Item>\n                          )}\n                        />\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default ProjectsList;\n\n\n\n// WEBPACK FOOTER //\n// components/projects/projectsList.js","/*global module:true*/\n/*jslint nomen:true*/\n/**\n * @module Utility\n */\n(function (context, undefined) {\n    'use strict';\n\n    var DEFAULT_TRUNCATE_SYMBOL = 'â€¦',\n        // Limit emails to no more than about 600 chars, well over the max of ~300.\n        // cf. RFC: https://www.rfc-editor.org/errata_search.php?eid=1690\n        URL_REGEX = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)|((mailto:)?[_.\\w-]{1,300}@(.{1,300}\\.)[a-zA-Z]{2,3})/g;\n\n    function __appendEllipsis(string, options, content) {\n        if (content.length === string.length || !options.ellipsis) {\n            return content;\n        }\n        content += options.ellipsis;\n        return content;\n    }\n    /**\n     * Truncate HTML string and keep tag safe.\n     *\n     * @method truncate\n     * @param {String} string string needs to be truncated\n     * @param {Number} maxLength length of truncated string\n     * @param {Object} options (optional)\n     * @param {Boolean} [options.keepImageTag] flag to specify if keep image tag, false by default\n     * @param {Boolean|String} [options.ellipsis] omission symbol for truncated string, '...' by default\n     * @return {String} truncated string\n     */\n    function truncate(string, maxLength, options) {\n        var content = '', // truncated text storage\n            matches = true,\n            remainingLength = maxLength,\n            result,\n            index;\n\n        options = options || {};\n        options.ellipsis = (typeof options.ellipsis === \"undefined\") ? DEFAULT_TRUNCATE_SYMBOL : options.ellipsis;\n\n        if (!string || string.length === 0) {\n            return '';\n        }\n\n        matches = true;\n        while (matches) {\n            URL_REGEX.lastIndex = content.length;\n            matches = URL_REGEX.exec(string);\n\n            if (!matches || (matches.index - content.length) >= remainingLength) {\n                content += string.substring(content.length, maxLength);\n                return __appendEllipsis(string, options, content, maxLength);\n            }\n\n            result = matches[0];\n            index = matches.index;\n            content += string.substring(content.length, index + result.length);\n            remainingLength -= index + result.length;\n\n            if (remainingLength <= 0) {\n                break;\n            }\n        }\n\n        return __appendEllipsis(string, options, content, maxLength);\n    }\n\n    if ('undefined' !== typeof module && module.exports) {\n        module.exports = truncate;\n    } else {\n        context.truncate = truncate;\n    }\n}(String));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/truncate/truncate.js\n// module id = ./node_modules/truncate/truncate.js\n// module chunks = 4"],"mappings":";;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}
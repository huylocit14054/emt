{"version":3,"file":"0.da8ec5a7575cbcb4b357.hot-update.js","sources":["webpack:///components/navigationLayout.js","webpack:///components/topHeader.js","webpack:///components/topHeader/ChangeAvatarModal.js","webpack:///./graphql/mutations.gql","webpack:///./graphql/queries.gql"],"sourcesContent":["import { Layout, Menu, Icon, Dropdown, message } from 'antd';\nimport { withRouter } from 'next/router';\nimport { Query } from 'react-apollo';\nimport Link from 'next/link';\nimport { getCurrentUser as GET_CURRENT_USER_QUERY } from '../graphql/queries.gql';\nimport TopHeader from './topHeader';\n\nconst { Sider, Content } = Layout;\n\nclass NavigationLayout extends React.Component {\n  state = {\n    collapsed: false,\n  };\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n    let currentPage = this.props.router.pathname;\n    currentPage =\n      currentPage.includes('project') || currentPage === '/'\n        ? 'projects'\n        : currentPage.replace('/', '');\n    return (\n      <Layout id=\"navigation-layout\">\n        <Query query={GET_CURRENT_USER_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return 'Loading...';\n            if (error) return `Error! ${error.message}`;\n            const currentUserSync = data.currentUser;\n            return (\n              <Sider\n                collapsed={false}\n                style={{ paddingTop: 0, height: '100vh', position: 'fixed' }}\n              >\n                <Menu mode=\"inline\" theme=\"dark\" selectedKeys={[currentPage]}>\n                  <Menu.Item key=\"projects\" style={{ marginTop: 0 }}>\n                    <Link prefetch href=\"/\">\n                      <a>\n                        <Icon type=\"folder-open\" />\n                        <span>Projects</span>\n                      </a>\n                    </Link>\n                  </Menu.Item>\n                  {currentUserSync.role === 'root_admin' && (\n                    <Menu.Item key=\"users\">\n                      <Link prefetch href=\"/users\">\n                        <a>\n                          <Icon type=\"team\" />\n                          <span>Users</span>\n                        </a>\n                      </Link>\n                    </Menu.Item>\n                  )}\n                </Menu>\n              </Sider>\n            );\n          }}\n        </Query>\n        <Layout style={{ marginLeft: this.state.collapsed ? 0 : 120 }}>\n          <TopHeader />\n\n          <Content\n            style={{\n              margin: '15px 16px 16px 100px',\n              padding: 24,\n              background: '#fff',\n              minHeight: '100vh',\n            }}\n          >\n            {this.props.children}\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(NavigationLayout);\n\n\n\n// WEBPACK FOOTER //\n// components/navigationLayout.js","import { Layout, Menu, Icon, Dropdown, Avatar, List } from 'antd';\nimport { withApollo, Query } from 'react-apollo';\nimport Link from 'next/link';\nimport { Image } from 'cloudinary-react';\nimport cookie from 'cookie';\nimport redirect from '../lib/redirect';\nimport stylesheet from 'styles/topHeader.less';\nimport ChangeAvatarModal from './topHeader/ChangeAvatarModal';\nimport { CLOUD_NAME } from '../constants';\nimport { getCurrentUser as GET_CURRENT_USER_QUERY } from '../graphql/queries.gql';\n\nconst { Header } = Layout;\n\nclass TopHeader extends React.Component {\n  signout = () => {\n    document.cookie = cookie.serialize('token', '', {\n      maxAge: -1, // Expire the cookie immediately\n    });\n    window.location.replace('/login');\n  };\n\n  render() {\n    return (\n      <Query query={GET_CURRENT_USER_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) return `Error! ${error.message}`;\n          const currentUserSync = data.currentUser;\n          const menu = (\n            <Menu className=\"menu-dropdown\">\n              <Menu.Item key=\"user\">\n                <List.Item.Meta\n                  avatar={\n                    <Image\n                      cloudName={CLOUD_NAME}\n                      publicId={currentUserSync.avatar}\n                      width=\"40\"\n                      crop=\"scale\"\n                      style={{ borderRadius: '50%' }}\n                    />\n                  }\n                  title={<a>{currentUserSync.username}</a>}\n                  description={<ChangeAvatarModal currentUserId={currentUserSync.id} />}\n                />\n              </Menu.Item>\n              <Menu.Divider />\n              <Menu.Item key=\"profile\">\n                <Link prefetch as=\"/me/profile\" href=\"/profile\">\n                  <a>\n                    <Icon type=\"profile\" /> Profile\n                  </a>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"logout\">\n                <a onClick={this.signout}>\n                  <Icon type=\"logout\" /> Sign out\n                </a>\n              </Menu.Item>\n            </Menu>\n          );\n\n          return (\n            <Header\n              style={{\n                backgroundColor: 'white',\n                padding: 0,\n              }}\n              className=\"topHeader\"\n            >\n              <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\n              <Dropdown overlay={menu}>\n                <div className=\"ant-dropdown-link user-dropdown\" href=\"#\">\n                  <Image\n                    cloudName={CLOUD_NAME}\n                    publicId={currentUserSync.avatar}\n                    width=\"40\"\n                    crop=\"scale\"\n                    style={{ borderRadius: '50%' }}\n                  />\n                </div>\n              </Dropdown>\n              <div>\n                <Link prefetch href=\"/\">\n                  <a>\n                    <img\n                      src=\"http://sv1.upsieutoc.com/2018/06/14/company_logo.jpg\"\n                      className=\"company-logo\"\n                    />\n                  </a>\n                </Link>\n              </div>\n            </Header>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withApollo(TopHeader);\n\n\n\n// WEBPACK FOOTER //\n// components/topHeader.js","import { Modal, Button, Upload, Icon, message, Spin } from 'antd';\nimport { withApollo, ApolloConsumer } from 'react-apollo';\nimport { Image } from 'cloudinary-react';\nimport { updateAvatar as UPDATE_AVATAR_MUTATION } from '../../graphql/mutations.gql';\nimport { getCurrentUser as GET_CURRENT_USER_QUERY } from '../../graphql/queries.gql';\nimport { CLOUD_NAME } from '../../constants';\nimport stylesheet from 'styles/updateAvatar.less';\n\nclass ChangeAvatarModal extends React.Component {\n  state = {\n    visible: false,\n    loading: false,\n  };\n  beforeUpload = file => {\n    const isJPG = file.type === 'image/jpeg' || 'image/png';\n    if (!isJPG) {\n      message.error('You can only upload JPG or PNG file!');\n      return false;\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n      return false;\n    }\n    this.startUpload(file);\n    return false;\n  };\n  startUpload = async file => {\n    this.setState({ loading: true });\n\n    this.props.client\n      .mutate({\n        mutation: UPDATE_AVATAR_MUTATION,\n        variables: {\n          input: {\n            avatar: file,\n          },\n        },\n      })\n      .then(data => {\n        const { avatarUrl } = data.data.updateAvatar;\n\n        const { currentUser } = this.props.client.readQuery({\n          query: GET_CURRENT_USER_QUERY,\n        });\n        currentUser.avatar = avatarUrl;\n        this.props.client.writeQuery({\n          query: GET_CURRENT_USER_QUERY,\n          data: { currentUser },\n        });\n\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <a onClick={this.showModal}>Change Avatar</a>\n        <Modal\n          title=\"Change Picture\"\n          visible={this.state.visible}\n          footer={null}\n          onCancel={this.handleCancel}\n        >\n          <ApolloConsumer>\n            {client => {\n              const data = client.readQuery({\n                query: GET_CURRENT_USER_QUERY,\n              });\n              const { currentUser } = data;\n              return (\n                <div className=\"upload-avatar-layout\">\n                  <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    beforeUpload={this.beforeUpload}\n                  >\n                    <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\n                    <Spin\n                      spinning={this.state.loading}\n                      style={{ right: '0%' }}\n                      indicator={<Icon type=\"loading\" style={{ fontSize: 24 }} spin />}\n                    >\n                      <Image\n                        cloudName={CLOUD_NAME}\n                        publicId={currentUser.avatar}\n                        width=\"300\"\n                        crop=\"scale\"\n                        style={{ margin: 'auto' }}\n                      />\n                    </Spin>\n                  </Upload>\n                </div>\n              );\n            }}\n          </ApolloConsumer>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withApollo(ChangeAvatarModal);\n\n\n\n// WEBPACK FOOTER //\n// components/topHeader/ChangeAvatarModal.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"loginUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"LoginInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"loginUser\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"token\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateUserInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createUser\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]}]}}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateUserInfo\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateUserInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateUser\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updatedUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]}]}}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateAvatar\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateAvatarInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateAvatar\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatarUrl\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"addMemberToProject\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"AddMemberToProjectInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"addMemberToProject\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"addedMember\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"user\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updatePassword\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdatePasswordInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updatePassword\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"passwordIsUpdated\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createProject\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateProjectInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createProject\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdProject\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"updateMemberRoleInProject\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdateMemberRoleInProjectInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updateMemberRoleInProject\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updated\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":1178}};\n    doc.loc.source = {\"body\":\"mutation loginUser($input: LoginInput!) {\\n  loginUser(input: $input) {\\n    token\\n  }\\n}\\n\\nmutation createUser($input: CreateUserInput!) {\\n  createUser(input: $input) {\\n    createdUser {\\n      id\\n      username\\n      email\\n      createdAt\\n      avatar\\n    }\\n  }\\n}\\n\\nmutation updateUserInfo($input: UpdateUserInput!) {\\n  updateUser(input: $input) {\\n    updatedUser {\\n      id\\n      username\\n      email\\n    }\\n  }\\n}\\n\\nmutation updateAvatar($input: UpdateAvatarInput!) {\\n  updateAvatar(input: $input) {\\n    avatarUrl\\n  }\\n}\\nmutation addMemberToProject($input: AddMemberToProjectInput!) {\\n  addMemberToProject(input: $input) {\\n    addedMember {\\n      id\\n      role\\n      user {\\n        id\\n        email\\n        username\\n        role\\n        avatar\\n      }\\n    }\\n  }\\n}\\n\\nmutation updatePassword($input: UpdatePasswordInput!) {\\n  updatePassword(input: $input) {\\n    passwordIsUpdated\\n  }\\n}\\n\\nmutation createProject($input: CreateProjectInput!) {\\n  createProject(input: $input) {\\n    createdProject {\\n      id\\n      name\\n      description\\n    }\\n  }\\n}\\n\\nmutation updateMemberRoleInProject($input: UpdateMemberRoleInProjectInput!) {\\n  updateMemberRoleInProject(input: $input) {\\n    updated\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"loginUser\"] = oneQuery(doc, \"loginUser\");\n        \n        module.exports[\"createUser\"] = oneQuery(doc, \"createUser\");\n        \n        module.exports[\"updateUserInfo\"] = oneQuery(doc, \"updateUserInfo\");\n        \n        module.exports[\"updateAvatar\"] = oneQuery(doc, \"updateAvatar\");\n        \n        module.exports[\"addMemberToProject\"] = oneQuery(doc, \"addMemberToProject\");\n        \n        module.exports[\"updatePassword\"] = oneQuery(doc, \"updatePassword\");\n        \n        module.exports[\"createProject\"] = oneQuery(doc, \"createProject\");\n        \n        module.exports[\"updateMemberRoleInProject\"] = oneQuery(doc, \"updateMemberRoleInProject\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./graphql/mutations.gql\n// module id = ./graphql/mutations.gql\n// module chunks = 0 4 5 6","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCurrentUser\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"currentUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"usersSuggestion\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"usersSuggestion\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"query\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCurrentUserProfile\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"profile\"},\"name\":{\"kind\":\"Name\",\"value\":\"currentUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCurrentUserOnClient\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"currentUser\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"client\"},\"arguments\":[]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getAllUsers\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getProjectOfCurrentUser\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"projectsAsMemberOfCurrentUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"projectsAsAdminOfCurrentUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getMembersByProjectId\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"projectId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"projectMembers\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"projectId\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"projectId\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"user\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"avatar\"},\"arguments\":[],\"directives\":[]}]}}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getProjectById\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"project\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"isManagedByCurrentUser\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":998}};\n    doc.loc.source = {\"body\":\"query getCurrentUser {\\n  currentUser {\\n    id\\n    username\\n    role\\n    avatar\\n  }\\n}\\n\\nquery usersSuggestion($query: String!) {\\n  usersSuggestion(query: $query) {\\n    id\\n    username\\n    email\\n    avatar\\n  }\\n}\\n\\nquery getCurrentUserProfile {\\n  profile: currentUser {\\n    id\\n    username\\n    email\\n    role\\n    avatar\\n  }\\n}\\n\\nquery getCurrentUserOnClient {\\n  currentUser @client {\\n    id\\n    username\\n    role\\n    avatar\\n  }\\n}\\n\\nquery getAllUsers {\\n  users {\\n    avatar\\n    id\\n    username\\n    email\\n    createdAt\\n  }\\n}\\n\\nquery getProjectOfCurrentUser {\\n  projectsAsMemberOfCurrentUser {\\n    id\\n    name\\n    description\\n  }\\n  projectsAsAdminOfCurrentUser {\\n    id\\n    name\\n    description\\n  }\\n}\\n\\nquery getMembersByProjectId($projectId: ID!) {\\n  projectMembers(projectId: $projectId) {\\n    id\\n    role\\n    user {\\n      id\\n      email\\n      username\\n      role\\n      avatar\\n    }\\n  }\\n}\\n\\nquery getProjectById($id: ID!) {\\n  project(id: $id) {\\n    id\\n    name\\n    description\\n    isManagedByCurrentUser\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getCurrentUser\"] = oneQuery(doc, \"getCurrentUser\");\n        \n        module.exports[\"usersSuggestion\"] = oneQuery(doc, \"usersSuggestion\");\n        \n        module.exports[\"getCurrentUserProfile\"] = oneQuery(doc, \"getCurrentUserProfile\");\n        \n        module.exports[\"getCurrentUserOnClient\"] = oneQuery(doc, \"getCurrentUserOnClient\");\n        \n        module.exports[\"getAllUsers\"] = oneQuery(doc, \"getAllUsers\");\n        \n        module.exports[\"getProjectOfCurrentUser\"] = oneQuery(doc, \"getProjectOfCurrentUser\");\n        \n        module.exports[\"getMembersByProjectId\"] = oneQuery(doc, \"getMembersByProjectId\");\n        \n        module.exports[\"getProjectById\"] = oneQuery(doc, \"getProjectById\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./graphql/queries.gql\n// module id = ./graphql/queries.gql\n// module chunks = 0 4 5 6"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnEA;AAsEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnFA;AAsFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClhHA;AAmjsourceRoot":""}
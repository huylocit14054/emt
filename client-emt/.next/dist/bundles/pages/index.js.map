{"version":3,"file":"bundles/pages/index.js","sources":["webpack:///webpack/bootstrap d07c5c6bb68aaa2ddbb8","webpack:///components/projects/projectsList.js","webpack:///components/projects/projectsList/CreateProjectModal.js","webpack:///components/projects/projectsList/ListItem.js","webpack:///components/projects/projectsList/createProjectModal/CreateProjectForm.js","webpack:///./graphql/mutations.gql","webpack:///./graphql/queries.gql","webpack:///lib/checkLoggedIn.js","webpack:///lib/redirect.js","webpack:///pages/index.js","webpack:///styles/projects.less","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"antd/lib/avatar\"","webpack:///external \"antd/lib/card\"","webpack:///external \"antd/lib/divider\"","webpack:///external \"antd/lib/form\"","webpack:///external \"antd/lib/icon\"","webpack:///external \"antd/lib/input\"","webpack:///external \"antd/lib/list\"","webpack:///external \"antd/lib/message\"","webpack:///external \"antd/lib/modal\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"truncate\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d07c5c6bb68aaa2ddbb8","import { List, Card, Avatar, Divider, Icon, Button } from \"antd\";\nimport { Query } from \"react-apollo\";\nimport { getProjectOfCurrentUser as GET_PROJECTS_OF_CURRENT_USER } from \"../../graphql/queries.gql\";\nimport ListItem from \"./projectsList/ListItem\";\nimport CreateProjectModal from \"./projectsList/CreateProjectModal\";\n\nconst truncate = require(\"truncate\");\n\nclass ProjectsList extends React.Component {\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <div className=\"projects-list\">\n        {currentUser.role === \"root_admin\" && <CreateProjectModal />}\n        <Query query={GET_PROJECTS_OF_CURRENT_USER}>\n          {({ loading, error, data }) => {\n            if (loading) return \"Loading...\";\n            if (error) return `Error! ${error.message}`;\n            const {\n              projectsAsAdminOfCurrentUser,\n              projectsAsMemberOfCurrentUser\n            } = data;\n            return (\n              <div>\n                {projectsAsAdminOfCurrentUser.length > 0 && (\n                  <React.Fragment>\n                    <Divider orientation=\"left\">\n                      <Icon type=\"solution\" style={{ marginRight: 8 }} />As\n                      Admin\n                    </Divider>\n                    <List\n                      grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 6,\n                        xxl: 3\n                      }}\n                      dataSource={projectsAsAdminOfCurrentUser}\n                      renderItem={project => (\n                        <List.Item>\n                          <Card>\n                            <h2>\n                              <b>{project.name}</b>\n                            </h2>\n                            <p>{truncate(project.description, 70)}</p>\n                            <div>\n                              <Avatar icon=\"user\" />\n                              <Avatar>U</Avatar>\n                              <Avatar>USER</Avatar>\n                              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                              <Avatar\n                                style={{\n                                  color: \"#f56a00\",\n                                  backgroundColor: \"#fde3cf\"\n                                }}\n                              >\n                                U\n                              </Avatar>\n                              <Avatar\n                                style={{ backgroundColor: \"#87d068\" }}\n                                icon=\"user\"\n                              />\n                            </div>\n                          </Card>\n                        </List.Item>\n                      )}\n                    />\n\n                    {projectsAsMemberOfCurrentUser.length > 0 && (\n                      <React.Fragment>\n                        <Divider orientation=\"left\">\n                          <Icon type=\"user\" style={{ marginRight: 8 }} />\n                          As Member\n                        </Divider>\n                        <List\n                          grid={{\n                            gutter: 16,\n                            xs: 1,\n                            sm: 2,\n                            md: 4,\n                            lg: 4,\n                            xl: 6,\n                            xxl: 3\n                          }}\n                          dataSource={projectsAsMemberOfCurrentUser}\n                          renderItem={project => (\n                            <List.Item>\n                              <Card>\n                                <h2>\n                                  <b>{project.name}</b>\n                                </h2>\n                                <p>{truncate(project.description, 70)}</p>\n                                <div>\n                                  <Avatar icon=\"user\" />\n                                  <Avatar>U</Avatar>\n                                  <Avatar>USER</Avatar>\n                                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                                  <Avatar\n                                    style={{\n                                      color: \"#f56a00\",\n                                      backgroundColor: \"#fde3cf\"\n                                    }}\n                                  >\n                                    U\n                                  </Avatar>\n                                  <Avatar\n                                    style={{ backgroundColor: \"#87d068\" }}\n                                    icon=\"user\"\n                                  />\n                                </div>\n                              </Card>\n                            </List.Item>\n                          )}\n                        />\n                      </React.Fragment>\n                    )}\n                  </React.Fragment>\n                )}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default ProjectsList;\n\n\n\n// WEBPACK FOOTER //\n// components/projects/projectsList.js","import { Button, message, Icon, List, Card } from \"antd\";\nimport { Mutation } from \"react-apollo\";\nimport { createProject as CREATE_PROJECT_MUTATION } from \"../../../graphql/mutations.gql\";\nimport { getProjectOfCurrentUser as GET_PROJECTS_OF_CURRENT_USER_QUERY } from \"../../../graphql/queries.gql\";\nimport CreateProjectForm from \"./createProjectModal/CreateProjectForm\";\n\nconst addNewProject = [\n  {\n    title: \"Add new project\"\n  }\n];\nclass CreateProjectModal extends React.Component {\n  state = {\n    visible: false\n  };\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n  handleCreate = createProject => {\n    const form = this.formRef.props.form;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n      createProject({\n        variables: {\n          input: {\n            attributes: JSON.stringify(values)\n          }\n        },\n        update: (\n          store,\n          {\n            data: {\n              createProject: { createdProject }\n            }\n          }\n        ) => {\n          const data = store.readQuery({\n            query: GET_PROJECTS_OF_CURRENT_USER_QUERY\n          });\n\n          data.projectsAsAdminOfCurrentUser.splice(0, 0, createdProject);\n          store.writeQuery({\n            query: GET_PROJECTS_OF_CURRENT_USER_QUERY,\n            data\n          });\n          console.log(createdProject);\n        }\n      });\n    });\n  };\n  saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <List\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 4,\n            lg: 4,\n            xl: 6,\n            xxl: 3\n          }}\n          dataSource={addNewProject}\n          renderItem={item => (\n            <List.Item>\n              <Card className=\"add-project-btn\" onClick={this.showModal}>\n                <b>\n                  <Icon type=\"plus\" /> {item.title}\n                </b>\n              </Card>\n            </List.Item>\n          )}\n        />\n        <br />\n        <br />\n        <Mutation\n          mutation={CREATE_PROJECT_MUTATION}\n          onCompleted={data => {\n            console.log(data);\n            const form = this.formRef.props.form;\n            // this.setState({ visible: false });\n            message.success(\"Project Created\");\n            form.resetFields();\n          }}\n          onError={error => {\n            // If you want to send error to external service?\n            error.graphQLErrors.map(({ message }, i) => {\n              message.error(message, 3);\n            });\n          }}\n        >\n          {(createProject, { loading, data, error }) => (\n            <CreateProjectForm\n              wrappedComponentRef={this.saveFormRef}\n              confirmLoading={loading}\n              visible={this.state.visible}\n              onCancel={this.handleCancel}\n              onCreate={() => this.handleCreate(createProject)}\n            />\n          )}\n        </Mutation>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CreateProjectModal;\n\n\n\n// WEBPACK FOOTER //\n// components/projects/projectsList/CreateProjectModal.js","import { List, Card, Avatar } from \"antd\";\nconst truncate = require(\"truncate\");\nconst ListItem = ({ project }) => (\n  <List.Item>\n    <Card>\n      <h2>\n        <b>{project.name}</b>\n      </h2>\n      <p>{truncate(project.description, 70)}</p>\n      <div>\n        <Avatar icon=\"user\" />\n        <Avatar>U</Avatar>\n        <Avatar>USER</Avatar>\n        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n        <Avatar\n          style={{\n            color: \"#f56a00\",\n            backgroundColor: \"#fde3cf\"\n          }}\n        >\n          U\n        </Avatar>\n        <Avatar style={{ backgroundColor: \"#87d068\" }} icon=\"user\" />\n      </div>\n    </Card>\n  </List.Item>\n);\n\nexport default ListItem;\n\n\n\n// WEBPACK FOOTER //\n// components/projects/projectsList/ListItem.js","import { Form, Input, Modal, Rate } from \"antd\";\n\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\n\nconst CreateProjectForm = Form.create()(\n  class extends React.Component {\n    render() {\n      const { visible, onCancel, onCreate, form, confirmLoading } = this.props;\n\n      const { getFieldDecorator } = form;\n\n      return (\n        <Modal\n          confirmLoading={confirmLoading}\n          visible={visible}\n          okText=\"create\"\n          onCancel={onCancel}\n          cancelText=\"cancel\"\n          onOk={onCreate}\n        >\n          <Form layout=\"vertical\" onSubmit={onCreate}>\n            <FormItem label=\"name\">\n              {getFieldDecorator(\"name\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input the name of project!\"\n                  }\n                ]\n              })(<Input />)}\n            </FormItem>\n            <FormItem label=\"description\">\n              {getFieldDecorator(\"description\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input the description of project!\"\n                  }\n                ]\n              })(<TextArea rows={4} />)}\n            </FormItem>\n          </Form>\n        </Modal>\n      );\n    }\n  }\n);\n\nexport default CreateProjectForm;\n\n\n\n// WEBPACK FOOTER //\n// components/projects/projectsList/createProjectModal/CreateProjectForm.js","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"loginUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"LoginInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"loginUser\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"token\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateUserInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createUser\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]}]}}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"createProject\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateProjectInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createProject\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdProject\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":407}};\n    doc.loc.source = {\"body\":\"mutation loginUser($input: LoginInput!) {\\n  loginUser(input: $input) {\\n    token\\n  }\\n}\\n\\nmutation createUser($input: CreateUserInput!) {\\n  createUser(input: $input) {\\n    createdUser {\\n      id\\n      username\\n      email\\n      createdAt\\n    }\\n  }\\n}\\n\\nmutation createProject($input: CreateProjectInput!) {\\n  createProject(input: $input) {\\n    createdProject {\\n      id\\n      name\\n      description\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"loginUser\"] = oneQuery(doc, \"loginUser\");\n        \n        module.exports[\"createUser\"] = oneQuery(doc, \"createUser\");\n        \n        module.exports[\"createProject\"] = oneQuery(doc, \"createProject\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./graphql/mutations.gql\n// module id = ./graphql/mutations.gql\n// module chunks = 3 5","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCurrentUser\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"currentUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getCurrentUserOnClient\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"currentUser\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"client\"},\"arguments\":[]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getAllUsers\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getProjectOfCurrentUser\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"projectsAsMemberOfCurrentUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"projectsAsAdminOfCurrentUser\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":420}};\n    doc.loc.source = {\"body\":\"query getCurrentUser {\\n  currentUser {\\n    id\\n    username\\n    role\\n  }\\n}\\n\\nquery getCurrentUserOnClient {\\n  currentUser @client {\\n    id\\n    username\\n    role\\n  }\\n}\\n\\nquery getAllUsers {\\n  users {\\n    id\\n    username\\n    email\\n    createdAt\\n  }\\n}\\n\\nquery getProjectOfCurrentUser {\\n  projectsAsMemberOfCurrentUser {\\n    id\\n    name\\n    description\\n  }\\n  projectsAsAdminOfCurrentUser {\\n    id\\n    name\\n    description\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getCurrentUser\"] = oneQuery(doc, \"getCurrentUser\");\n        \n        module.exports[\"getCurrentUserOnClient\"] = oneQuery(doc, \"getCurrentUserOnClient\");\n        \n        module.exports[\"getAllUsers\"] = oneQuery(doc, \"getAllUsers\");\n        \n        module.exports[\"getProjectOfCurrentUser\"] = oneQuery(doc, \"getProjectOfCurrentUser\");\n        \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./graphql/queries.gql\n// module id = ./graphql/queries.gql\n// module chunks = 0 3 5","import gql from \"graphql-tag\";\nimport { getCurrentUser as GET_CURRENT_USER_QUERY } from \"../graphql/queries.gql\";\nexport default apolloClient =>\n  apolloClient\n    .query({ query: GET_CURRENT_USER_QUERY })\n    .then(({ data }) => {\n      console.log(data);\n      return { currentUser: data.currentUser };\n    })\n    .catch(err => {\n      console.log(err);\n      // Fail gracefully\n      return { currentUser: {} };\n    });\n\n\n\n// WEBPACK FOOTER //\n// lib/checkLoggedIn.js","import Router from 'next/router'\n\nexport default (context, target) => {\n  if (context.res) {\n    // server\n    // 303: \"See other\"\n    context.res.writeHead(303, { Location: target })\n    context.res.end()\n  } else {\n    // In the browser, we just pretend like this never even happened ;)\n    Router.replace(target)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// lib/redirect.js","import redirect from \"../lib/redirect\";\nimport checkLoggedIn from \"../lib/checkLoggedIn\";\nimport ProjectsList from \"../components/projects/projectsList\";\nimport stylesheet from \"styles/projects.less\";\nexport default class Projects extends React.Component {\n  static async getInitialProps(context) {\n    const { currentUser } = await checkLoggedIn(context.apolloClient);\n\n    if (!currentUser) {\n      // Already signed in? No need to continue.\n      // Throw them back to the main page\n      redirect(context, \"/login\");\n    }\n    return { currentUser };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\n        <ProjectsList currentUser={this.props.currentUser} />\n      </React.Fragment>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js","module.exports = \".projects-list {\\n  padding-top: 0.5%;\\n}\\n.projects-list .add-project-btn {\\n  padding: 5%;\\n}\\n.projects-list .add-project-btn div.ant-card-body {\\n  text-align: center;\\n}\\n.projects-list span.ant-avatar {\\n  margin: 0px 3px;\\n}\\n.projects-list span.ant-divider-inner-text {\\n  background-color: #00b5d0;\\n  font-size: 15pt;\\n  font-weight: 900;\\n  color: #fff;\\n}\\n.projects-list div.ant-card {\\n  cursor: pointer;\\n  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) !important;\\n          box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) !important;\\n}\\n.projects-list div.ant-card:hover {\\n  -webkit-box-shadow: 0 8px 12px rgba(0, 0, 0, 0.1) !important;\\n          box-shadow: 0 8px 12px rgba(0, 0, 0, 0.1) !important;\\n}\\n\"\n\n\n// WEBPACK FOOTER //\n// styles/projects.less","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = @babel/runtime/regenerator\n// module chunks = 0 3 5","module.exports = require(\"antd/lib/avatar\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/avatar\"\n// module id = antd/lib/avatar\n// module chunks = 0 3","module.exports = require(\"antd/lib/card\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/card\"\n// module id = antd/lib/card\n// module chunks = 3","module.exports = require(\"antd/lib/divider\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/divider\"\n// module id = antd/lib/divider\n// module chunks = 3","module.exports = require(\"antd/lib/form\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/form\"\n// module id = antd/lib/form\n// module chunks = 3 5","module.exports = require(\"antd/lib/icon\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/icon\"\n// module id = antd/lib/icon\n// module chunks = 0 3","module.exports = require(\"antd/lib/input\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/input\"\n// module id = antd/lib/input\n// module chunks = 3 5","module.exports = require(\"antd/lib/list\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/list\"\n// module id = antd/lib/list\n// module chunks = 3","module.exports = require(\"antd/lib/message\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/message\"\n// module id = antd/lib/message\n// module chunks = 3 5","module.exports = require(\"antd/lib/modal\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"antd/lib/modal\"\n// module id = antd/lib/modal\n// module chunks = 3 5","module.exports = require(\"graphql-tag\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-tag\"\n// module id = graphql-tag\n// module chunks = 3 5","module.exports = require(\"next/router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/router\"\n// module id = next/router\n// module chunks = 0 3 5","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0 3 5","module.exports = require(\"react-apollo\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-apollo\"\n// module id = react-apollo\n// module chunks = 0 3 5","module.exports = require(\"truncate\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"truncate\"\n// module id = truncate\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyFA;AAKA;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;ACCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvzHA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;ACZA;AAAA;AAAA;AAKA;AACA;AAIA;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;;;;;;ACXA;;;;;;;;;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}
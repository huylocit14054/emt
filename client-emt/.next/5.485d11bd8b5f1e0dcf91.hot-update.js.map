{"version":3,"file":"5.485d11bd8b5f1e0dcf91.hot-update.js","sources":["webpack:///components/project/projectComponent/MembersTab.js"],"sourcesContent":["import { withRouter } from \"next/router\";\nimport { Table, Icon, Divider, Radio, message } from \"antd\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { getMembersByProjectId as GET_MEMBERS_BY_PROJECTS_ID } from \"../../../graphql/queries.gql\";\nimport { updateMemberRoleInProject as UPDATE_MEMBER_ROLE_IN_PROJECT } from \"../../../graphql/mutations.gql\";\n// import AddMemberForm from \"./MembersTap/AddMemberForm\";\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\n\nfunction onChange(updateMemberRoleInProject, e, memberId) {\n  updateMemberRoleInProject({\n    variables: {\n      input: {\n        projectMemberId: memberId,\n        role: e.target.value\n      }\n    }\n  });\n  console.log(`radio checked:${e.target.value}`);\n}\n\nconst columns = [\n  {\n    title: \"Username\",\n    render: member => <a href=\"javascript:;\">{member.user.username}</a>\n  },\n  {\n    title: \"Email\",\n    render: member => <a href=\"javascript:;\">{member.user.email}</a>\n  },\n  {\n    title: \"Role\",\n    render: member => {\n      if (member.user.role === \"root_admin\") {\n        return <p>Root Admin</p>;\n      }\n      return (\n        <Mutation\n          mutation={UPDATE_MEMBER_ROLE_IN_PROJECT}\n          onCompleted={data => {\n            console.log(data);\n          }}\n          onError={error => {\n            // If you want to send error to external service?\n            error.graphQLErrors.map(({ message }, i) => {\n              message.error(message, 3);\n            });\n          }}\n        >\n          {(updateMemberRoleInProject, { loading, data, error }) => (\n            <RadioGroup\n              onChange={e => onChange(updateMemberRoleInProject, e, member.id)}\n              defaultValue={member.role}\n            >\n              <RadioButton value=\"member\">Member</RadioButton>\n              <RadioButton value=\"project_admin\">Project Admin</RadioButton>\n            </RadioGroup>\n          )}\n        </Mutation>\n      );\n    }\n  }\n];\n\nclass MembersTab extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <br />\n        <Query\n          query={GET_MEMBERS_BY_PROJECTS_ID}\n          variables={{ projectId: this.props.router.query.id }}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return \"Loading...\";\n            if (error) return `Error! ${error.message}`;\n            return (\n              <Table\n                columns={columns}\n                dataSource={data.projectMembers}\n                rowKey=\"id\"\n              />\n            );\n          }}\n        </Query>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(MembersTab);\n\n\n\n// WEBPACK FOOTER //\n// components/project/projectComponent/MembersTab.js"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAsCA;;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}
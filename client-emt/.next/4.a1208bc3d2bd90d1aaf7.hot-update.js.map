{"version":3,"file":"4.a1208bc3d2bd90d1aaf7.hot-update.js","sources":["webpack:///components/project/projectComponent/MembersTab.js"],"sourcesContent":["import { withRouter } from 'next/router';\nimport { Table, Icon, Divider, Radio, message, Tag } from 'antd';\nimport { Query, Mutation, ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport {\n  getCurrentUserOnClient as GET_CURRENT_USER_QUERY,\n  getMembersByProjectId as GET_MEMBERS_BY_PROJECTS_ID,\n} from '../../../graphql/queries.gql';\nimport { updateMemberRoleInProject as UPDATE_MEMBER_ROLE_IN_PROJECT } from '../../../graphql/mutations.gql';\nimport If from '../../../utils/If';\nimport AddMemberForm from './MembersTap/AddMemberForm';\n\nconst humanizeString = require('humanize-string');\n\nconst RadioButton = Radio.Button;\nconst RadioGroup = Radio.Group;\nconst { Column, ColumnGroup } = Table;\n\nfunction onChange(updateMemberRoleInProject, e, memberId) {\n  updateMemberRoleInProject({\n    variables: {\n      input: {\n        projectMemberId: memberId,\n        role: e.target.value,\n      },\n    },\n  });\n  console.log(`radio checked:${e.target.value}`);\n}\n\nclass MembersTab extends React.Component {\n  render() {\n    return (\n      <Query\n        query={GET_MEMBERS_BY_PROJECTS_ID}\n        variables={{ projectId: this.props.router.query.id }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) return `Error! ${error.message}`;\n          return (\n            <ApolloConsumer>\n              {client => {\n                const project = client.readFragment({\n                  id: `Project:${this.props.router.query.id}`,\n                  fragment: gql`\n                    fragment currentProject on Project {\n                      isManagedByCurrentUser\n                    }\n                  `,\n                });\n                const { isManagedByCurrentUser } = project;\n\n                return (\n                  <React.Fragment>\n                    <If condition={isManagedByCurrentUser} then={<AddMemberForm />} else={null} />\n                    <Table loading={loading} dataSource={data.projectMembers} rowKey=\"id\">\n                      <Column\n                        title=\"Username\"\n                        key=\"username\"\n                        render={member => <a href=\"javascript:;\">{member.user.username}</a>}\n                      />\n                      <Column\n                        title=\"Email\"\n                        key=\"email\"\n                        render={member => <a href=\"javascript:;\">{member.user.email}</a>}\n                      />\n                      <Column\n                        title=\"Role\"\n                        key=\"role\"\n                        render={member => {\n                          if (member.user.role === 'root_admin') {\n                            return <Tag color=\"gold\">Root admin</Tag>;\n                          }\n                          return (\n                            <Mutation\n                              mutation={UPDATE_MEMBER_ROLE_IN_PROJECT}\n                              onCompleted={data => {\n                                console.log(data);\n                              }}\n                              onError={error => {\n                                // If you want to send error to external service?\n                                error.graphQLErrors.map(({ message }, i) => {\n                                  message.error(message, 3);\n                                });\n                              }}\n                            >\n                              {(updateMemberRoleInProject, { loading, data, error }) => (\n                                <If\n                                  condition={isManagedByCurrentUser}\n                                  then={\n                                    <RadioGroup\n                                      onChange={e =>\n                                        onChange(updateMemberRoleInProject, e, member.id)\n                                      }\n                                      defaultValue={member.role}\n                                    >\n                                      <RadioButton value=\"member\">Member</RadioButton>\n                                      <RadioButton value=\"project_admin\">Project Admin</RadioButton>\n                                    </RadioGroup>\n                                  }\n                                  else={\n                                    member.role === 'project_admin' ? (\n                                      <Tag color=\"cyan\">{humanizeString(member.role)}</Tag>\n                                    ) : (\n                                      <p>{humanizeString(member.role)}</p>\n                                    )\n                                  }\n                                />\n                              )}\n                            </Mutation>\n                          );\n                        }}\n                      />\n                    </Table>\n                  </React.Fragment>\n                );\n              }}\n            </ApolloConsumer>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withRouter(MembersTab);\n\n\n\n// WEBPACK FOOTER //\n// components/project/projectComponent/MembersTab.js"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7FA;AAgGA;;;;;A","sourceRoot":""}